{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noket\\\\SocialTelegram\\\\fronted\\\\src\\\\Components\\\\Chats\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport SockJS from 'sockjs-client';\nimport { Client } from '@stomp/stompjs';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat(props) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [chatId, setChatId] = useState(null);\n  const [inputText, setInputText] = useState('');\n  const [hasMore, setHasMore] = useState(true);\n  const clientRef = useRef(null);\n  const isFirstLoad = useRef(true);\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const getChatId = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/api/chats/twoId?id1=${props.userId}&id2=${props.user2Id}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        if (response.ok) {\n          const id = await response.text();\n          setChatId(id);\n        }\n        if (response == 404) {\n          try {\n            const response = await fetch('http://localhost:8000/api/chats', {\n              method: 'POST',\n              headers: {\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\n                'Content-Type': 'application/json'\n              },\n              credentials: 'include',\n              body: JSON.stringify({\n                userId: props.userId,\n                user2Id: props.user2Id\n              }),\n              mode: 'cors'\n            });\n            if (response.ok) {\n              const id = await response.text();\n              setChatId(id);\n            } else {\n              alert(\"Eror\");\n            }\n          } catch (error) {\n            console.error('Ошибка:', error);\n          }\n        } else {\n          console.error('Ошибка при получении chatId');\n        }\n      } catch (error) {\n        console.error('Ошибка:', error);\n      }\n    };\n    getChatId();\n  }, [props.userId, props.user2Id]);\n  useEffect(() => {\n    if (chatId == null) return;\n    const socket = new SockJS(\"http://localhost:8000/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        console.log(\"WebSocket connected\");\n        client.subscribe(`/topic/chat/${chatId}`, message => {\n          const msg = JSON.parse(message.body);\n          setMessages(prev => [...prev, msg]);\n        });\n      },\n      onStompError: frame => {\n        console.error('Broker error:', frame.headers['message']);\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n    return () => {\n      client.deactivate();\n    };\n  }, [chatId]);\n  useEffect(() => {\n    if (chatId && isFirstLoad.current) {\n      const loadLastMessages = async () => {\n        try {\n          const res = await fetch(`http://localhost:8080/api/messages/last/${chatId}`);\n          if (res.ok) {\n            const data = await res.json();\n            setMessages(data);\n            isFirstLoad.current = false;\n          }\n        } catch (error) {\n          console.error(\"Ошибка загрузки сообщений:\", error);\n        }\n      };\n      loadLastMessages();\n    }\n  }, [chatId]);\n  const loadMoreMessages = async () => {\n    if (!hasMore || messages.length === 0) return;\n    const oldestTimestamp = messages[0].timestamp;\n    try {\n      const res = await fetch(`http://localhost:8080/api/messages/load?chatId=${chatId}&before=${oldestTimestamp}`);\n      if (res.ok) {\n        const data = await res.json();\n        if (data.length === 0) {\n          setHasMore(false);\n        } else {\n          setMessages(prev => [...data, ...prev]);\n        }\n      }\n    } catch (error) {\n      console.error(\"Ошибка подгрузки:\", error);\n    }\n  };\n  const handleScroll = () => {\n    if (containerRef.current.scrollTop === 0) {\n      loadMoreMessages();\n    }\n  };\n  const sendMessage = () => {\n    if (!inputText.trim() || !clientRef.current || !clientRef.current.connected) return;\n    clientRef.current.publish({\n      destination: `/app/${props.user2Id}/chat.send`,\n      body: JSON.stringify({\n        senderId: props.userId,\n        chatId: chatId,\n        text: inputText,\n        timestamp: new Date().toISOString()\n      })\n    });\n    setInputText('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userInfo_chat\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userName_chat\",\n        children: props.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      onScroll: handleScroll,\n      ref: containerRef,\n      style: {\n        overflowY: 'auto',\n        maxHeight: '400px'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.senderId === props.userId ? 'my-message' : 'their-message',\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"push_chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n        className: \"input_chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat_button\",\n        onClick: sendMessage,\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"c7M6sgKWdGYyoX27Zu1XAXshwhY=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useState","useRef","SockJS","Client","jsxDEV","_jsxDEV","Chat","props","_s","messages","setMessages","chatId","setChatId","inputText","setInputText","hasMore","setHasMore","clientRef","isFirstLoad","containerRef","getChatId","response","fetch","userId","user2Id","method","headers","localStorage","getItem","ok","id","text","credentials","body","JSON","stringify","mode","alert","error","console","socket","client","webSocketFactory","reconnectDelay","onConnect","log","subscribe","message","msg","parse","prev","onStompError","frame","activate","current","deactivate","loadLastMessages","res","data","json","loadMoreMessages","length","oldestTimestamp","timestamp","handleScroll","scrollTop","sendMessage","trim","connected","publish","destination","senderId","Date","toISOString","children","className","username","fileName","_jsxFileName","lineNumber","columnNumber","onScroll","ref","style","overflowY","maxHeight","map","index","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/noket/SocialTelegram/fronted/src/Components/Chats/Chat.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport SockJS from 'sockjs-client';\r\nimport { Client } from '@stomp/stompjs';\r\nimport './Chat.css';\r\n\r\nfunction Chat(props) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatId, setChatId] = useState(null);\r\n  const [inputText, setInputText] = useState('');\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  const clientRef = useRef(null);\r\n  const isFirstLoad = useRef(true);\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const getChatId = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:8000/api/chats/twoId?id1=${props.userId}&id2=${props.user2Id}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n          }\r\n        });\r\n\r\n        if (response.ok) {\r\n          const id = await response.text();\r\n          setChatId(id);\r\n        }\r\n        if(response == 404){\r\n          try {\r\n            const response = await fetch('http://localhost:8000/api/chats', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              credentials: 'include',\r\n              body: JSON.stringify({\r\n                userId: props.userId,\r\n                user2Id: props.user2Id\r\n              }),\r\n              mode: 'cors'\r\n            });\r\n\r\n            if(response.ok){\r\n                  const id = await response.text()\r\n                  setChatId(id)\r\n              }\r\n              else{\r\n                  alert(\"Eror\")\r\n              }\r\n          } catch (error) {\r\n            console.error('Ошибка:', error);\r\n          }\r\n        } \r\n        else {\r\n          console.error('Ошибка при получении chatId');\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка:', error);\r\n      }\r\n    };\r\n\r\n    getChatId();\r\n  }, [props.userId, props.user2Id]);\r\n\r\n  useEffect(() => {\r\n    if (chatId == null) return\r\n\r\n    const socket = new SockJS(\"http://localhost:8000/ws\");\r\n    const client = new Client({\r\n      webSocketFactory: () => socket,\r\n      reconnectDelay: 5000,\r\n      onConnect: () => {\r\n        console.log(\"WebSocket connected\");\r\n\r\n        client.subscribe(`/topic/chat/${chatId}`, (message) => {\r\n          const msg = JSON.parse(message.body);\r\n          setMessages((prev) => [...prev, msg]);\r\n        });\r\n      },\r\n      onStompError: (frame) => {\r\n        console.error('Broker error:', frame.headers['message']);\r\n      }\r\n    });\r\n\r\n    client.activate();\r\n    clientRef.current = client;\r\n\r\n    return () => {\r\n      client.deactivate();\r\n    };\r\n  }, [chatId]);\r\n\r\n  useEffect(() => {\r\n    if (chatId && isFirstLoad.current) {\r\n      const loadLastMessages = async () => {\r\n        try {\r\n          const res = await fetch(`http://localhost:8080/api/messages/last/${chatId}`);\r\n          if (res.ok) {\r\n            const data = await res.json();\r\n            setMessages(data);\r\n            isFirstLoad.current = false;\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Ошибка загрузки сообщений:\", error);\r\n        }\r\n      };\r\n\r\n      loadLastMessages();\r\n    }\r\n  }, [chatId]);\r\n\r\n  const loadMoreMessages = async () => {\r\n    if (!hasMore || messages.length === 0) return;\r\n\r\n    const oldestTimestamp = messages[0].timestamp;\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `http://localhost:8080/api/messages/load?chatId=${chatId}&before=${oldestTimestamp}`\r\n      );\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        if (data.length === 0) {\r\n          setHasMore(false);\r\n        } else {\r\n          setMessages((prev) => [...data, ...prev]);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка подгрузки:\", error);\r\n    }\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    if (containerRef.current.scrollTop === 0) {\r\n      loadMoreMessages();\r\n    }\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (!inputText.trim() || !clientRef.current || !clientRef.current.connected) return;\r\n\r\n    clientRef.current.publish({\r\n      destination: `/app/${props.user2Id}/chat.send`,\r\n      body: JSON.stringify({\r\n        senderId: props.userId,\r\n        chatId: chatId,\r\n        text: inputText,\r\n        timestamp: new Date().toISOString()\r\n      }),\r\n    });\r\n\r\n    setInputText('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"userInfo_chat\">\r\n        <div className=\"userName_chat\">{props.username}</div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"messages-container\"\r\n        onScroll={handleScroll}\r\n        ref={containerRef}\r\n        style={{ overflowY: 'auto', maxHeight: '400px' }}\r\n      >\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={msg.senderId === props.userId ? 'my-message' : 'their-message'}\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"push_chat\">\r\n        <input\r\n          value={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n          placeholder=\"Введите сообщение\"\r\n          className=\"input_chat\"\r\n        />\r\n        <button className=\"chat_button\" onClick={sendMessage}>Отправить</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}