{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noket\\\\Desktop\\\\Sutod\\\\fronted\\\\src\\\\Components\\\\Chats\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport SockJS from 'sockjs-client';\nimport { Client } from '@stomp/stompjs';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  userId,\n  user2Id,\n  username\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [chatId, setChatId] = useState(null);\n  const [inputText, setInputText] = useState('');\n  const [hasMore, setHasMore] = useState(true);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const clientRef = useRef(null);\n  const isFirstLoad = useRef(true);\n  const containerRef = useRef(null);\n  const pageRef = useRef(0);\n\n  // Получение или создание чата\n  const fetchChatId = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/chats/twoId?id1=${userId}&id2=${user2Id}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (response.ok) {\n        const id = await response.text();\n        return id;\n      } else {\n        const createResponse = await fetch('http://localhost:8080/api/chats', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId,\n            user2Id\n          })\n        });\n        if (createResponse.ok) {\n          alert(\"Хуй\");\n          return await createResponse.text();\n        } else {\n          alert(\"Член\");\n        }\n      }\n    } catch (error) {\n      console.error('Chat error:', error);\n      return null;\n    }\n  }, [userId, user2Id]);\n\n  // Инициализация WebSocket\n  const initWebSocket = useCallback(id => {\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000,\n      connectHeaders: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      onConnect: () => {\n        setIsConnected(true);\n        console.log(\"WebSocket connected\");\n        client.subscribe(`/topic/chat/${id}`, message => {\n          const msg = JSON.parse(message.body);\n          setMessages(prev => [...prev, msg]);\n        });\n\n        // Подписка на персональные уведомления\n        client.subscribe(`/user/queue/errors`, message => {\n          console.error('Error:', message.body);\n        });\n      },\n      onDisconnect: () => {\n        setIsConnected(false);\n      },\n      onStompError: frame => {\n        console.error('Broker error:', frame.headers['message']);\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n    return () => {\n      client.deactivate();\n    };\n  }, []);\n\n  // Загрузка сообщений\n  const loadMessages = useCallback(async (id, beforeTimestamp = null) => {\n    setIsLoading(true);\n    try {\n      let url = `http://localhost:8080/api/messages/${beforeTimestamp ? 'load' : 'last'}/${id}`;\n      if (beforeTimestamp) {\n        url += `?before=${beforeTimestamp}`;\n      }\n      const res = await fetch(url, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (res.ok) {\n        const data = await res.json();\n        if (beforeTimestamp) {\n          setMessages(prev => [...data, ...prev]);\n          if (data.length === 0) setHasMore(false);\n        } else {\n          setMessages(data);\n        }\n        pageRef.current += 1;\n      }\n    } catch (error) {\n      console.error(\"Ошибка загрузки сообщений:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Отправка сообщения\n  const sendMessage = useCallback(() => {\n    if (!inputText.trim() || !isConnected) return;\n    clientRef.current.publish({\n      destination: `/app/chat.send`,\n      body: JSON.stringify({\n        senderId: userId,\n        chatId: chatId,\n        text: inputText,\n        timestamp: new Date().toISOString()\n      }),\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    setInputText('');\n  }, [inputText, isConnected, chatId, userId]);\n  useEffect(() => {\n    const initChat = async () => {\n      const id = await fetchChatId();\n      if (id) {\n        setChatId(id);\n        initWebSocket(id);\n        loadMessages(id);\n      }\n    };\n    initChat();\n    return () => {\n      if (clientRef.current) {\n        clientRef.current.deactivate();\n      }\n    };\n  }, [fetchChatId, initWebSocket, loadMessages]);\n  const handleScroll = useCallback(() => {\n    if (containerRef.current.scrollTop === 0 && !isLoading && hasMore && messages.length > 0) {\n      loadMessages(chatId, messages[0].timestamp);\n    }\n  }, [isLoading, hasMore, messages, chatId, loadMessages]);\n  useEffect(() => {\n    if (containerRef.current && !isFirstLoad.current) {\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }\n    isFirstLoad.current = false;\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userInfo_chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userName_chat\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\",\n        children: isConnected ? 'Online' : 'Connecting...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userInfo_chat\",\n      onScroll: handleScroll,\n      ref: containerRef,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 23\n      }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.senderId === userId ? 'my-message' : 'their-message',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: new Date(msg.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, `${msg.timestamp}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"push_chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n        className: \"input_chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat_button\",\n        onClick: sendMessage,\n        disabled: !inputText.trim(),\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"z4oVK12z/1XqBQQ2cRUjshbarUo=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useState","useRef","useCallback","SockJS","Client","jsxDEV","_jsxDEV","Chat","userId","user2Id","username","_s","messages","setMessages","chatId","setChatId","inputText","setInputText","hasMore","setHasMore","isConnected","setIsConnected","isLoading","setIsLoading","clientRef","isFirstLoad","containerRef","pageRef","fetchChatId","response","fetch","headers","localStorage","getItem","ok","id","text","createResponse","method","body","JSON","stringify","alert","error","console","initWebSocket","socket","client","webSocketFactory","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","connectHeaders","Authorization","onConnect","log","subscribe","message","msg","parse","prev","onDisconnect","onStompError","frame","activate","current","deactivate","loadMessages","beforeTimestamp","url","res","data","json","length","sendMessage","trim","publish","destination","senderId","timestamp","Date","toISOString","initChat","handleScroll","scrollTop","scrollHeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onScroll","ref","map","index","toLocaleTimeString","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/noket/Desktop/Sutod/fronted/src/Components/Chats/Chat.jsx"],"sourcesContent":["import { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport SockJS from 'sockjs-client';\r\nimport { Client } from '@stomp/stompjs';\r\nimport './Chat.css';\r\n\r\nfunction Chat({ userId, user2Id, username }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatId, setChatId] = useState(null);\r\n  const [inputText, setInputText] = useState('');\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const clientRef = useRef(null);\r\n  const isFirstLoad = useRef(true);\r\n  const containerRef = useRef(null);\r\n  const pageRef = useRef(0);\r\n\r\n  // Получение или создание чата\r\n  const fetchChatId = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/api/chats/twoId?id1=${userId}&id2=${user2Id}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const id = await response.text();\r\n        return id;\r\n      } \r\n      else{\r\n        const createResponse = await fetch('http://localhost:8080/api/chats', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            userId,\r\n            user2Id\r\n          })\r\n        });\r\n\r\n        if (createResponse.ok) {\r\n          alert(\"Хуй\")\r\n          return await createResponse.text();\r\n        }\r\n        else{\r\n          alert(\"Член\")\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Chat error:', error);\r\n      return null;\r\n    }\r\n  }, [userId, user2Id]);\r\n\r\n  // Инициализация WebSocket\r\n  const initWebSocket = useCallback((id) => {\r\n    const socket = new SockJS(\"http://localhost:8080/ws\");\r\n    const client = new Client({\r\n      webSocketFactory: () => socket,\r\n      reconnectDelay: 5000,\r\n      heartbeatIncoming: 4000,\r\n      heartbeatOutgoing: 4000,\r\n      connectHeaders: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n      },\r\n      onConnect: () => {\r\n        setIsConnected(true);\r\n        console.log(\"WebSocket connected\");\r\n\r\n        client.subscribe(`/topic/chat/${id}`, (message) => {\r\n          const msg = JSON.parse(message.body);\r\n          setMessages(prev => [...prev, msg]);\r\n        });\r\n\r\n        // Подписка на персональные уведомления\r\n        client.subscribe(`/user/queue/errors`, (message) => {\r\n          console.error('Error:', message.body);\r\n        });\r\n      },\r\n      onDisconnect: () => {\r\n        setIsConnected(false);\r\n      },\r\n      onStompError: (frame) => {\r\n        console.error('Broker error:', frame.headers['message']);\r\n      }\r\n    });\r\n\r\n    client.activate();\r\n    clientRef.current = client;\r\n\r\n    return () => {\r\n      client.deactivate();\r\n    };\r\n  }, []);\r\n\r\n  // Загрузка сообщений\r\n  const loadMessages = useCallback(async (id, beforeTimestamp = null) => {\r\n    setIsLoading(true);\r\n    try {\r\n      let url = `http://localhost:8080/api/messages/${beforeTimestamp ? 'load' : 'last'}/${id}`;\r\n      if (beforeTimestamp) {\r\n        url += `?before=${beforeTimestamp}`;\r\n      }\r\n\r\n      const res = await fetch(url, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\r\n        }\r\n      });\r\n      \r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        if (beforeTimestamp) {\r\n          setMessages(prev => [...data, ...prev]);\r\n          if (data.length === 0) setHasMore(false);\r\n        } else {\r\n          setMessages(data);\r\n        }\r\n        pageRef.current += 1;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка загрузки сообщений:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Отправка сообщения\r\n  const sendMessage = useCallback(() => {\r\n    if (!inputText.trim() || !isConnected) return;\r\n\r\n    clientRef.current.publish({\r\n      destination: `/app/chat.send`,\r\n      body: JSON.stringify({\r\n        senderId: userId,\r\n        chatId: chatId,\r\n        text: inputText,\r\n        timestamp: new Date().toISOString()\r\n      }),\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n      }\r\n    });\r\n\r\n    setInputText('');\r\n  }, [inputText, isConnected, chatId, userId]);\r\n\r\n  useEffect(() => {\r\n    const initChat = async () => {\r\n      const id = await fetchChatId();\r\n      if (id) {\r\n        setChatId(id);\r\n        initWebSocket(id);\r\n        loadMessages(id);\r\n      }\r\n    };\r\n\r\n    initChat();\r\n\r\n    return () => {\r\n      if (clientRef.current) {\r\n        clientRef.current.deactivate();\r\n      }\r\n    };\r\n  }, [fetchChatId, initWebSocket, loadMessages]);\r\n\r\n  const handleScroll = useCallback(() => {\r\n    if (containerRef.current.scrollTop === 0 && !isLoading && hasMore && messages.length > 0) {\r\n      loadMessages(chatId, messages[0].timestamp);\r\n    }\r\n  }, [isLoading, hasMore, messages, chatId, loadMessages]);\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current && !isFirstLoad.current) {\r\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n    }\r\n    isFirstLoad.current = false;\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"userInfo_chat\">\r\n        <div className=\"userName_chat\">{username}</div>\r\n        <div className=\"connection-status\">\r\n          {isConnected ? 'Online' : 'Connecting...'}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"userInfo_chat\" onScroll={handleScroll} ref={containerRef}>\r\n        {isLoading && <div className=\"loading-indicator\">Loading...</div>}\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={`${msg.timestamp}-${index}`}\r\n            className={msg.senderId === userId ? 'my-message' : 'their-message'}\r\n          >\r\n            <div className=\"message-content\">{msg.text}</div>\r\n            <div className=\"message-time\">\r\n              {new Date(msg.timestamp).toLocaleTimeString()}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"push_chat\">\r\n        <input value={inputText} onChange={(e) => setInputText(e.target.value)} placeholder=\"Введите сообщение\" className=\"input_chat\"/>\r\n        <button className=\"chat_button\" onClick={sendMessage} disabled={!inputText.trim()}>Отправить</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAChE,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,IAAIA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMwB,SAAS,GAAGvB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMwB,WAAW,GAAGxB,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMyB,YAAY,GAAGzB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM0B,OAAO,GAAG1B,MAAM,CAAC,CAAC,CAAC;;EAEzB;EACA,MAAM2B,WAAW,GAAG1B,WAAW,CAAC,YAAY;IAC1C,IAAI;MACF,MAAM2B,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6CtB,MAAM,QAAQC,OAAO,EAAE,EAAE;QACjGsB,OAAO,EAAE;UACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC1D;MACF,CAAC,CAAC;MAEF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACf,MAAMC,EAAE,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAChC,OAAOD,EAAE;MACX,CAAC,MACG;QACF,MAAME,cAAc,GAAG,MAAMP,KAAK,CAAC,iCAAiC,EAAE;UACpEQ,MAAM,EAAE,MAAM;UACdP,OAAO,EAAE;YACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC1D,cAAc,EAAE;UAClB,CAAC;UACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBjC,MAAM;YACNC;UACF,CAAC;QACH,CAAC,CAAC;QAEF,IAAI4B,cAAc,CAACH,EAAE,EAAE;UACrBQ,KAAK,CAAC,KAAK,CAAC;UACZ,OAAO,MAAML,cAAc,CAACD,IAAI,CAAC,CAAC;QACpC,CAAC,MACG;UACFM,KAAK,CAAC,MAAM,CAAC;QACf;MACF;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACnC,OAAO,IAAI;IACb;EACF,CAAC,EAAE,CAACnC,MAAM,EAAEC,OAAO,CAAC,CAAC;;EAErB;EACA,MAAMoC,aAAa,GAAG3C,WAAW,CAAEiC,EAAE,IAAK;IACxC,MAAMW,MAAM,GAAG,IAAI3C,MAAM,CAAC,0BAA0B,CAAC;IACrD,MAAM4C,MAAM,GAAG,IAAI3C,MAAM,CAAC;MACxB4C,gBAAgB,EAAEA,CAAA,KAAMF,MAAM;MAC9BG,cAAc,EAAE,IAAI;MACpBC,iBAAiB,EAAE,IAAI;MACvBC,iBAAiB,EAAE,IAAI;MACvBC,cAAc,EAAE;QACdC,aAAa,EAAE,UAAUrB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACxD,CAAC;MACDqB,SAAS,EAAEA,CAAA,KAAM;QACfjC,cAAc,CAAC,IAAI,CAAC;QACpBuB,OAAO,CAACW,GAAG,CAAC,qBAAqB,CAAC;QAElCR,MAAM,CAACS,SAAS,CAAC,eAAerB,EAAE,EAAE,EAAGsB,OAAO,IAAK;UACjD,MAAMC,GAAG,GAAGlB,IAAI,CAACmB,KAAK,CAACF,OAAO,CAAClB,IAAI,CAAC;UACpC1B,WAAW,CAAC+C,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEF,GAAG,CAAC,CAAC;QACrC,CAAC,CAAC;;QAEF;QACAX,MAAM,CAACS,SAAS,CAAC,oBAAoB,EAAGC,OAAO,IAAK;UAClDb,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEc,OAAO,CAAClB,IAAI,CAAC;QACvC,CAAC,CAAC;MACJ,CAAC;MACDsB,YAAY,EAAEA,CAAA,KAAM;QAClBxC,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;MACDyC,YAAY,EAAGC,KAAK,IAAK;QACvBnB,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEoB,KAAK,CAAChC,OAAO,CAAC,SAAS,CAAC,CAAC;MAC1D;IACF,CAAC,CAAC;IAEFgB,MAAM,CAACiB,QAAQ,CAAC,CAAC;IACjBxC,SAAS,CAACyC,OAAO,GAAGlB,MAAM;IAE1B,OAAO,MAAM;MACXA,MAAM,CAACmB,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,YAAY,GAAGjE,WAAW,CAAC,OAAOiC,EAAE,EAAEiC,eAAe,GAAG,IAAI,KAAK;IACrE7C,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,IAAI8C,GAAG,GAAG,sCAAsCD,eAAe,GAAG,MAAM,GAAG,MAAM,IAAIjC,EAAE,EAAE;MACzF,IAAIiC,eAAe,EAAE;QACnBC,GAAG,IAAI,WAAWD,eAAe,EAAE;MACrC;MAEA,MAAME,GAAG,GAAG,MAAMxC,KAAK,CAACuC,GAAG,EAAE;QAC3BtC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC1D;MACF,CAAC,CAAC;MAEF,IAAIqC,GAAG,CAACpC,EAAE,EAAE;QACV,MAAMqC,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAI,CAAC,CAAC;QAC7B,IAAIJ,eAAe,EAAE;UACnBvD,WAAW,CAAC+C,IAAI,IAAI,CAAC,GAAGW,IAAI,EAAE,GAAGX,IAAI,CAAC,CAAC;UACvC,IAAIW,IAAI,CAACE,MAAM,KAAK,CAAC,EAAEtD,UAAU,CAAC,KAAK,CAAC;QAC1C,CAAC,MAAM;UACLN,WAAW,CAAC0D,IAAI,CAAC;QACnB;QACA5C,OAAO,CAACsC,OAAO,IAAI,CAAC;MACtB;IACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,SAAS;MACRpB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMmD,WAAW,GAAGxE,WAAW,CAAC,MAAM;IACpC,IAAI,CAACc,SAAS,CAAC2D,IAAI,CAAC,CAAC,IAAI,CAACvD,WAAW,EAAE;IAEvCI,SAAS,CAACyC,OAAO,CAACW,OAAO,CAAC;MACxBC,WAAW,EAAE,gBAAgB;MAC7BtC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBqC,QAAQ,EAAEtE,MAAM;QAChBM,MAAM,EAAEA,MAAM;QACdsB,IAAI,EAAEpB,SAAS;QACf+D,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC,CAAC;MACFlD,OAAO,EAAE;QACPsB,aAAa,EAAE,UAAUrB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACxD;IACF,CAAC,CAAC;IAEFhB,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC,EAAE,CAACD,SAAS,EAAEI,WAAW,EAAEN,MAAM,EAAEN,MAAM,CAAC,CAAC;EAE5CT,SAAS,CAAC,MAAM;IACd,MAAMmF,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAM/C,EAAE,GAAG,MAAMP,WAAW,CAAC,CAAC;MAC9B,IAAIO,EAAE,EAAE;QACNpB,SAAS,CAACoB,EAAE,CAAC;QACbU,aAAa,CAACV,EAAE,CAAC;QACjBgC,YAAY,CAAChC,EAAE,CAAC;MAClB;IACF,CAAC;IAED+C,QAAQ,CAAC,CAAC;IAEV,OAAO,MAAM;MACX,IAAI1D,SAAS,CAACyC,OAAO,EAAE;QACrBzC,SAAS,CAACyC,OAAO,CAACC,UAAU,CAAC,CAAC;MAChC;IACF,CAAC;EACH,CAAC,EAAE,CAACtC,WAAW,EAAEiB,aAAa,EAAEsB,YAAY,CAAC,CAAC;EAE9C,MAAMgB,YAAY,GAAGjF,WAAW,CAAC,MAAM;IACrC,IAAIwB,YAAY,CAACuC,OAAO,CAACmB,SAAS,KAAK,CAAC,IAAI,CAAC9D,SAAS,IAAIJ,OAAO,IAAIN,QAAQ,CAAC6D,MAAM,GAAG,CAAC,EAAE;MACxFN,YAAY,CAACrD,MAAM,EAAEF,QAAQ,CAAC,CAAC,CAAC,CAACmE,SAAS,CAAC;IAC7C;EACF,CAAC,EAAE,CAACzD,SAAS,EAAEJ,OAAO,EAAEN,QAAQ,EAAEE,MAAM,EAAEqD,YAAY,CAAC,CAAC;EAExDpE,SAAS,CAAC,MAAM;IACd,IAAI2B,YAAY,CAACuC,OAAO,IAAI,CAACxC,WAAW,CAACwC,OAAO,EAAE;MAChDvC,YAAY,CAACuC,OAAO,CAACmB,SAAS,GAAG1D,YAAY,CAACuC,OAAO,CAACoB,YAAY;IACpE;IACA5D,WAAW,CAACwC,OAAO,GAAG,KAAK;EAC7B,CAAC,EAAE,CAACrD,QAAQ,CAAC,CAAC;EAEd,oBACEN,OAAA;IAAKgF,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BjF,OAAA;MAAKgF,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BjF,OAAA;QAAKgF,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAE7E;MAAQ;QAAA8E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC/CrF,OAAA;QAAKgF,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/BnE,WAAW,GAAG,QAAQ,GAAG;MAAe;QAAAoE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENrF,OAAA;MAAKgF,SAAS,EAAC,eAAe;MAACM,QAAQ,EAAET,YAAa;MAACU,GAAG,EAAEnE,YAAa;MAAA6D,QAAA,GACtEjE,SAAS,iBAAIhB,OAAA;QAAKgF,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAChE/E,QAAQ,CAACkF,GAAG,CAAC,CAACpC,GAAG,EAAEqC,KAAK,kBACvBzF,OAAA;QAEEgF,SAAS,EAAE5B,GAAG,CAACoB,QAAQ,KAAKtE,MAAM,GAAG,YAAY,GAAG,eAAgB;QAAA+E,QAAA,gBAEpEjF,OAAA;UAAKgF,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAE7B,GAAG,CAACtB;QAAI;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjDrF,OAAA;UAAKgF,SAAS,EAAC,cAAc;UAAAC,QAAA,EAC1B,IAAIP,IAAI,CAACtB,GAAG,CAACqB,SAAS,CAAC,CAACiB,kBAAkB,CAAC;QAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAAA,GAND,GAAGjC,GAAG,CAACqB,SAAS,IAAIgB,KAAK,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAO7B,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENrF,OAAA;MAAKgF,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBjF,OAAA;QAAO2F,KAAK,EAAEjF,SAAU;QAACkF,QAAQ,EAAGC,CAAC,IAAKlF,YAAY,CAACkF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,WAAW,EAAC,mGAAmB;QAACf,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAChIrF,OAAA;QAAQgF,SAAS,EAAC,aAAa;QAACgB,OAAO,EAAE5B,WAAY;QAAC6B,QAAQ,EAAE,CAACvF,SAAS,CAAC2D,IAAI,CAAC,CAAE;QAAAY,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChF,EAAA,CAhNQJ,IAAI;AAAAiG,EAAA,GAAJjG,IAAI;AAkNb,eAAeA,IAAI;AAAC,IAAAiG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}