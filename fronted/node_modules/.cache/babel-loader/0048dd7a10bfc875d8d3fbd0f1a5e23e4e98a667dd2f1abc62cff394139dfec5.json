{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noket\\\\Desktop\\\\Sutod\\\\fronted\\\\src\\\\Components\\\\Chats\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport { Client } from '@stomp/stompjs';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  userId,\n  user2Id,\n  username\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [chatId, setChatId] = useState(null);\n  const [inputText, setInputText] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const clientRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // Получение или создание чата\n  const fetchChatId = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/chats/twoId?id1=${Math.min(userId, user2Id)}&id2=${Math.max(userId, user2Id)}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (response.ok) {\n        return await response.text();\n      } else if (response.status === 404) {\n        const createResponse = await fetch('http://localhost:8080/api/chats', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: Math.min(userId, user2Id),\n            user2Id: Math.max(userId, user2Id)\n          })\n        });\n        if (createResponse.ok) {\n          return await createResponse.text();\n        }\n        throw new Error('Failed to create chat');\n      }\n      throw new Error('Failed to get chat');\n    } catch (error) {\n      console.error('Chat error:', error);\n      setError('Failed to initialize chat');\n      return null;\n    }\n  }, [userId, user2Id]);\n\n  // Загрузка сообщений\n  const loadMessages = useCallback(async id => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`http://localhost:8080/api/messages/chat/${id}/recent`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setMessages(data.reverse()); // Новые сообщения внизу\n      } else {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n    } catch (error) {\n      console.error(\"Error loading messages:\", error);\n      setError(\"Failed to load messages\");\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Инициализация WebSocket\n  const initWebSocket = useCallback(() => {\n    const client = new Client({\n      brokerURL: 'ws://localhost:8080/ws',\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000,\n      connectHeaders: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      debug: function (str) {\n        console.log('STOMP:', str);\n      },\n      beforeConnect: () => {\n        console.log('Attempting to connect...');\n      },\n      onConnect: () => {\n        setIsConnected(true);\n        setError(null);\n        console.log(\"Successfully connected to WebSocket\");\n\n        // Подписка на обновления чата\n        client.subscribe(`/topic/chat/${chatId}`, message => {\n          const msg = JSON.parse(message.body);\n          setMessages(prev => [...prev, msg]);\n        });\n\n        // Подписка на ошибки\n        client.subscribe(`/user/queue/errors`, message => {\n          console.error('Error:', message.body);\n          setError(message.body);\n        });\n      },\n      onDisconnect: () => {\n        setIsConnected(false);\n        console.log(\"Disconnected from WebSocket\");\n      },\n      onStompError: frame => {\n        console.error('Broker error:', frame.headers['message']);\n        setError(frame.headers['message'] || 'WebSocket error');\n      },\n      onWebSocketError: event => {\n        console.error('WebSocket error:', event);\n        setError('WebSocket connection error');\n      },\n      onWebSocketClose: event => {\n        console.log('WebSocket closed:', event);\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n    return () => {\n      if (client.connected) {\n        client.deactivate();\n      }\n    };\n  }, [chatId]);\n\n  // ... остальные функции (fetchChatId, loadMessages, sendMessage) ...\n\n  useEffect(() => {\n    const initializeChat = async () => {\n      const id = await fetchChatId();\n      if (id) {\n        setChatId(id);\n        await loadMessages(id);\n        initWebSocket();\n      }\n    };\n    initializeChat();\n    return () => {\n      var _clientRef$current;\n      if ((_clientRef$current = clientRef.current) !== null && _clientRef$current !== void 0 && _clientRef$current.connected) {\n        clientRef.current.deactivate();\n      }\n    };\n  }, [fetchChatId, loadMessages, initWebSocket]);\n\n  // Отправка сообщения\n  const sendMessage = useCallback(() => {\n    if (!inputText.trim() || !isConnected || !chatId) return;\n    try {\n      clientRef.current.publish({\n        destination: `/app/chat.send`,\n        body: JSON.stringify({\n          senderId: userId,\n          chatId: chatId,\n          text: inputText,\n          timestamp: new Date().toISOString()\n        }),\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setInputText('');\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      setError(\"Failed to send message\");\n    }\n  }, [inputText, isConnected, chatId, userId]);\n\n  // Инициализация чата\n  useEffect(() => {\n    const initializeChat = async () => {\n      const id = await fetchChatId();\n      if (id) {\n        setChatId(id);\n        await loadMessages(id);\n        initWebSocket(id);\n      }\n    };\n    initializeChat();\n    return () => {\n      if (clientRef.current && clientRef.current.connected) {\n        clientRef.current.deactivate();\n      }\n    };\n  }, [fetchChatId, loadMessages, initWebSocket]);\n\n  // Автоскролл при новых сообщениях\n  useEffect(() => {\n    if (containerRef.current && messages.length > 0) {\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Chat with \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `connection-status ${isConnected ? 'connected' : 'disconnected'}`,\n        children: isConnected ? 'Online' : 'Offline'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      ref: containerRef,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading messages...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.senderId === userId ? 'my-message' : 'their-message'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: msg.text || msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: new Date(msg.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this)]\n      }, `${msg.id || index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && sendMessage(),\n        placeholder: \"Type a message...\",\n        disabled: !isConnected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: !inputText.trim() || !isConnected,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"neCkmv8PphLKeXCh08RmVic3WwA=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useState","useRef","useCallback","Client","jsxDEV","_jsxDEV","Chat","userId","user2Id","username","_s","messages","setMessages","chatId","setChatId","inputText","setInputText","isConnected","setIsConnected","isLoading","setIsLoading","error","setError","clientRef","containerRef","fetchChatId","response","fetch","Math","min","max","headers","localStorage","getItem","ok","text","status","createResponse","method","body","JSON","stringify","Error","console","loadMessages","id","data","json","reverse","initWebSocket","client","brokerURL","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","connectHeaders","Authorization","debug","str","log","beforeConnect","onConnect","subscribe","message","msg","parse","prev","onDisconnect","onStompError","frame","onWebSocketError","event","onWebSocketClose","activate","current","connected","deactivate","initializeChat","_clientRef$current","sendMessage","trim","publish","destination","senderId","timestamp","Date","toISOString","length","scrollTop","scrollHeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","index","content","toLocaleTimeString","type","value","onChange","e","target","onKeyPress","key","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/noket/Desktop/Sutod/fronted/src/Components/Chats/Chat.jsx"],"sourcesContent":["import { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { Client } from '@stomp/stompjs';\r\nimport './Chat.css';\r\n\r\nfunction Chat({ userId, user2Id, username }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatId, setChatId] = useState(null);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const clientRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n\r\n  // Получение или создание чата\r\n  const fetchChatId = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8080/api/chats/twoId?id1=${Math.min(userId, user2Id)}&id2=${Math.max(userId, user2Id)}`, \r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n          }\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        return await response.text();\r\n      } else if (response.status === 404) {\r\n        const createResponse = await fetch('http://localhost:8080/api/chats', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            userId: Math.min(userId, user2Id),\r\n            user2Id: Math.max(userId, user2Id)\r\n          })\r\n        });\r\n        \r\n        if (createResponse.ok) {\r\n          return await createResponse.text();\r\n        }\r\n        throw new Error('Failed to create chat');\r\n      }\r\n      throw new Error('Failed to get chat');\r\n    } catch (error) {\r\n      console.error('Chat error:', error);\r\n      setError('Failed to initialize chat');\r\n      return null;\r\n    }\r\n  }, [userId, user2Id]);\r\n\r\n  // Загрузка сообщений\r\n  const loadMessages = useCallback(async (id) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8080/api/messages/chat/${id}/recent`,\r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n          }\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setMessages(data.reverse()); // Новые сообщения внизу\r\n      } else {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading messages:\", error);\r\n      setError(\"Failed to load messages\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Инициализация WebSocket\r\n  const initWebSocket = useCallback(() => {\r\n    const client = new Client({\r\n      brokerURL: 'ws://localhost:8080/ws',\r\n      reconnectDelay: 5000,\r\n      heartbeatIncoming: 4000,\r\n      heartbeatOutgoing: 4000,\r\n      connectHeaders: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n      },\r\n      debug: function(str) {\r\n        console.log('STOMP:', str);\r\n      },\r\n      beforeConnect: () => {\r\n        console.log('Attempting to connect...');\r\n      },\r\n      onConnect: () => {\r\n        setIsConnected(true);\r\n        setError(null);\r\n        console.log(\"Successfully connected to WebSocket\");\r\n\r\n        // Подписка на обновления чата\r\n        client.subscribe(`/topic/chat/${chatId}`, (message) => {\r\n          const msg = JSON.parse(message.body);\r\n          setMessages(prev => [...prev, msg]);\r\n        });\r\n\r\n        // Подписка на ошибки\r\n        client.subscribe(`/user/queue/errors`, (message) => {\r\n          console.error('Error:', message.body);\r\n          setError(message.body);\r\n        });\r\n      },\r\n      onDisconnect: () => {\r\n        setIsConnected(false);\r\n        console.log(\"Disconnected from WebSocket\");\r\n      },\r\n      onStompError: (frame) => {\r\n        console.error('Broker error:', frame.headers['message']);\r\n        setError(frame.headers['message'] || 'WebSocket error');\r\n      },\r\n      onWebSocketError: (event) => {\r\n        console.error('WebSocket error:', event);\r\n        setError('WebSocket connection error');\r\n      },\r\n      onWebSocketClose: (event) => {\r\n        console.log('WebSocket closed:', event);\r\n      }\r\n    });\r\n\r\n    client.activate();\r\n    clientRef.current = client;\r\n\r\n    return () => {\r\n      if (client.connected) {\r\n        client.deactivate();\r\n      }\r\n    };\r\n  }, [chatId]);\r\n\r\n  // ... остальные функции (fetchChatId, loadMessages, sendMessage) ...\r\n\r\n  useEffect(() => {\r\n    const initializeChat = async () => {\r\n      const id = await fetchChatId();\r\n      if (id) {\r\n        setChatId(id);\r\n        await loadMessages(id);\r\n        initWebSocket();\r\n      }\r\n    };\r\n\r\n    initializeChat();\r\n\r\n    return () => {\r\n      if (clientRef.current?.connected) {\r\n        clientRef.current.deactivate();\r\n      }\r\n    };\r\n  }, [fetchChatId, loadMessages, initWebSocket]);\r\n\r\n  // Отправка сообщения\r\n  const sendMessage = useCallback(() => {\r\n    if (!inputText.trim() || !isConnected || !chatId) return;\r\n\r\n    try {\r\n      clientRef.current.publish({\r\n        destination: `/app/chat.send`,\r\n        body: JSON.stringify({\r\n          senderId: userId,\r\n          chatId: chatId,\r\n          text: inputText,\r\n          timestamp: new Date().toISOString()\r\n        }),\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n        }\r\n      });\r\n      setInputText('');\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      setError(\"Failed to send message\");\r\n    }\r\n  }, [inputText, isConnected, chatId, userId]);\r\n\r\n  // Инициализация чата\r\n  useEffect(() => {\r\n    const initializeChat = async () => {\r\n      const id = await fetchChatId();\r\n      if (id) {\r\n        setChatId(id);\r\n        await loadMessages(id);\r\n        initWebSocket(id);\r\n      }\r\n    };\r\n\r\n    initializeChat();\r\n\r\n    return () => {\r\n      if (clientRef.current && clientRef.current.connected) {\r\n        clientRef.current.deactivate();\r\n      }\r\n    };\r\n  }, [fetchChatId, loadMessages, initWebSocket]);\r\n\r\n  // Автоскролл при новых сообщениях\r\n  useEffect(() => {\r\n    if (containerRef.current && messages.length > 0) {\r\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  if (error) {\r\n    return <div className=\"chat-error\">Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <h3>Chat with {username}</h3>\r\n        <div className={`connection-status ${isConnected ? 'connected' : 'disconnected'}`}>\r\n          {isConnected ? 'Online' : 'Offline'}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"messages-container\" ref={containerRef}>\r\n        {isLoading ? (\r\n          <div className=\"loading\">Loading messages...</div>\r\n        ) : (\r\n          messages.map((msg, index) => (\r\n            <div\r\n              key={`${msg.id || index}`}\r\n              className={`message ${msg.senderId === userId ? 'my-message' : 'their-message'}`}\r\n            >\r\n              <div className=\"message-content\">{msg.text || msg.content}</div>\r\n              <div className=\"message-time\">\r\n                {new Date(msg.timestamp).toLocaleTimeString()}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"message-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n          onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n          placeholder=\"Type a message...\"\r\n          disabled={!isConnected}\r\n        />\r\n        <button\r\n          onClick={sendMessage}\r\n          disabled={!inputText.trim() || !isConnected}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}