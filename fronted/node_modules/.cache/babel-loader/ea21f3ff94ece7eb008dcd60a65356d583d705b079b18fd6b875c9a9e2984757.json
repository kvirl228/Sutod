{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noket\\\\SocialTelegram\\\\fronted\\\\src\\\\Components\\\\Chats\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport SockJS from 'sockjs-client';\nimport { Client, Stomp } from '@stomp/stompjs';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat(props) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [hasMore, setHasMore] = useState(true);\n  const clientRef = useRef(null);\n  const topRef = useRef(null);\n  const containerRef = useRef(null);\n  const isFirstLoad = useRef(true);\n  async function getChatId() {\n    try {\n      const response = await fetch('http://localhost:8000/api/chats/twoId', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          id1: props.userId,\n          id2: props.user2Id\n        })\n      });\n      if (response.ok) {\n        const token = await response.json();\n        localStorage.setItem(\"token\", token);\n        navigate('/chats', {\n          replace: true\n        });\n      } else {\n        alert(\"Eror\");\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n    }\n  }\n  useEffect(() => {\n    const socket = new SockJS(\"http://localhost:800/ws\");\n    const client = Stomp.over(socket);\n    client.connect({}, () => {\n      client.subscribe(`/topic/${props.chatId}`, message => {\n        const msg = JSON.parse(message.body);\n        setMessages(prev => [...prev, msg]);\n      });\n    });\n    client.activate();\n    clientRef.current = client;\n    return () => {\n      client.disconnect();\n    };\n  }, [props.chatId]);\n  function sendMessage() {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userInfo_chat\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userName_chat\",\n        children: props.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: msg.senderId === props.currentUserId ? 'my-message' : 'their-message',\n      children: msg.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"push_chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n        className: \"input_chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat_button\",\n        onClick: sendMessage,\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"xjzqPyIBt3FrEDc7NIqOUFvTLqA=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useState","useRef","SockJS","Client","Stomp","jsxDEV","_jsxDEV","Chat","props","_s","messages","setMessages","inputText","setInputText","hasMore","setHasMore","clientRef","topRef","containerRef","isFirstLoad","getChatId","response","fetch","method","headers","credentials","body","JSON","stringify","id1","userId","id2","user2Id","ok","token","json","localStorage","setItem","navigate","replace","alert","error","console","socket","client","over","connect","subscribe","chatId","message","msg","parse","prev","activate","current","disconnect","sendMessage","children","className","username","fileName","_jsxFileName","lineNumber","columnNumber","map","index","senderId","currentUserId","text","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/noket/SocialTelegram/fronted/src/Components/Chats/Chat.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport SockJS from 'sockjs-client';\r\nimport { Client, Stomp } from '@stomp/stompjs';\r\nimport'./Chat.css'\r\n\r\nfunction Chat(props){\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [inputText, setInputText] = useState('');\r\n    const [hasMore, setHasMore] = useState(true);\r\n\r\n    const clientRef = useRef(null);\r\n    const topRef = useRef(null);\r\n    const containerRef = useRef(null);\r\n    const isFirstLoad = useRef(true);\r\n\r\n    async function getChatId(){\r\n      try {\r\n      const response = await fetch('http://localhost:8000/api/chats/twoId', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n           id1:props.userId,\r\n           id2:props.user2Id\r\n        }),\r\n      });\r\n\r\n      if(response.ok){\r\n            const token = await response.json()\r\n            localStorage.setItem(\"token\", token)\r\n            navigate('/chats', { replace: true })\r\n        }\r\n        else{\r\n            alert(\"Eror\")\r\n        }\r\n    } catch (error) {\r\n      console.error('Ошибка:', error);\r\n    }\r\n    }\r\n\r\n    useEffect(() => {\r\n      const socket = new SockJS(\"http://localhost:800/ws\") \r\n      const client = Stomp.over(socket)\r\n\r\n      client.connect({}, () => {\r\n        client.subscribe(`/topic/${props.chatId}`, (message) => {\r\n          const msg = JSON.parse(message.body);\r\n          setMessages((prev) => [...prev, msg]);\r\n        })\r\n      })\r\n\r\n      client.activate()\r\n      clientRef.current = client\r\n\r\n      return () => {\r\n        client.disconnect()\r\n      }\r\n    }, [props.chatId])\r\n    \r\n    \r\n    function sendMessage(){\r\n\r\n    }\r\n    return(\r\n        <div> \r\n            <div className=\"userInfo_chat\">\r\n              <div className=\"userName_chat\">{props.username}</div>\r\n            </div>\r\n            {messages.map((msg, index) => (\r\n              <div key={index} className={msg.senderId === props.currentUserId ? 'my-message' : 'their-message'}>\r\n                {msg.text}\r\n              </div>\r\n            ))}\r\n            <div className=\"push_chat\">\r\n              <input value={inputText} onChange={(e) => setInputText(e.target.value)} placeholder=\"Введите сообщение\" className=\"input_chat\"/>\r\n              <button className=\"chat_button\" onClick={sendMessage}>send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}