{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport { Client } from '@stomp/stompjs';\nimport './Chat.css';\nfunction Chat({\n  userId,\n  user2Id,\n  username\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [chatId, setChatId] = useState(null);\n  const [inputText, setInputText] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [error, setError] = useState(null);\n  const clientRef = useRef(null);\n\n  // Получение или создание чата\n  const fetchChatId = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/chats/twoId?id1=${Math.min(userId, user2Id)}&id2=${Math.max(userId, user2Id)}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (response.ok) {\n        return await response.text();\n      } else if (response.status === 404) {\n        const createResponse = await fetch('http://localhost:8080/api/chats', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: Math.min(userId, user2Id),\n            user2Id: Math.max(userId, user2Id)\n          })\n        });\n        if (createResponse.ok) {\n          return await createResponse.text();\n        }\n        throw new Error('Failed to create chat');\n      }\n      throw new Error('Failed to get chat');\n    } catch (error) {\n      console.error('Chat error:', error);\n      setError('Failed to initialize chat');\n      return null;\n    }\n  }, [userId, user2Id]);\n\n  // Инициализация WebSocket\n  const initWebSocket = useCallback(id => {\n    const client = new Client({\n      brokerURL: 'ws://localhost:8080/ws',\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000,\n      connectHeaders: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      debug: function (str) {\n        console.log('STOMP:', str);\n      },\n      onConnect: () => {\n        setIsConnected(true);\n        console.log(\"WebSocket connected\");\n\n        // Подписка на обновления чата\n        client.subscribe(`/topic/chat/${id}`, message => {\n          const msg = JSON.parse(message.body);\n          setMessages(prev => [...prev, msg]);\n        });\n\n        // Подписка на ошибки\n        client.subscribe(`/user/queue/errors`, message => {\n          console.error('Error:', message.body);\n          setError(message.body);\n        });\n      },\n      onDisconnect: () => {\n        setIsConnected(false);\n        console.log(\"WebSocket disconnected\");\n      },\n      onStompError: frame => {\n        console.error('Broker error:', frame.headers['message']);\n        setError(frame.headers['message'] || 'WebSocket error');\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n    return () => {\n      if (client.connected) {\n        client.deactivate();\n      }\n    };\n  }, []);\n\n  // ... остальные функции (loadMessages, sendMessage) остаются такими же ...\n\n  useEffect(() => {\n    const initializeChat = async () => {\n      const id = await fetchChatId();\n      if (id) {\n        setChatId(id);\n        await loadMessages(id);\n        initWebSocket(id);\n      }\n    };\n    initializeChat();\n    return () => {\n      if (clientRef.current && clientRef.current.connected) {\n        clientRef.current.deactivate();\n      }\n    };\n  }, [fetchChatId, initWebSocket, loadMessages]);\n\n  // ... остальной код компонента ...\n}\n_s(Chat, \"s11a34MIWsfbv9dMuKOL1pwLL2U=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useState","useRef","useCallback","Client","Chat","userId","user2Id","username","_s","messages","setMessages","chatId","setChatId","inputText","setInputText","isConnected","setIsConnected","error","setError","clientRef","fetchChatId","response","fetch","Math","min","max","headers","localStorage","getItem","ok","text","status","createResponse","method","body","JSON","stringify","Error","console","initWebSocket","id","client","brokerURL","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","connectHeaders","Authorization","debug","str","log","onConnect","subscribe","message","msg","parse","prev","onDisconnect","onStompError","frame","activate","current","connected","deactivate","initializeChat","loadMessages","_c","$RefreshReg$"],"sources":["C:/Users/noket/Desktop/Sutod/fronted/src/Components/Chats/Chat.jsx"],"sourcesContent":["import { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { Client } from '@stomp/stompjs';\r\nimport './Chat.css';\r\n\r\nfunction Chat({ userId, user2Id, username }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatId, setChatId] = useState(null);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const clientRef = useRef(null);\r\n\r\n  // Получение или создание чата\r\n  const fetchChatId = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8080/api/chats/twoId?id1=${Math.min(userId, user2Id)}&id2=${Math.max(userId, user2Id)}`, \r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n          }\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        return await response.text();\r\n      } else if (response.status === 404) {\r\n        const createResponse = await fetch('http://localhost:8080/api/chats', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            userId: Math.min(userId, user2Id),\r\n            user2Id: Math.max(userId, user2Id)\r\n          })\r\n        });\r\n        \r\n        if (createResponse.ok) {\r\n          return await createResponse.text();\r\n        }\r\n        throw new Error('Failed to create chat');\r\n      }\r\n      throw new Error('Failed to get chat');\r\n    } catch (error) {\r\n      console.error('Chat error:', error);\r\n      setError('Failed to initialize chat');\r\n      return null;\r\n    }\r\n  }, [userId, user2Id]);\r\n\r\n  // Инициализация WebSocket\r\n  const initWebSocket = useCallback((id) => {\r\n    const client = new Client({\r\n      brokerURL: 'ws://localhost:8080/ws',\r\n      reconnectDelay: 5000,\r\n      heartbeatIncoming: 4000,\r\n      heartbeatOutgoing: 4000,\r\n      connectHeaders: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n      },\r\n      debug: function(str) {\r\n        console.log('STOMP:', str);\r\n      },\r\n      onConnect: () => {\r\n        setIsConnected(true);\r\n        console.log(\"WebSocket connected\");\r\n\r\n        // Подписка на обновления чата\r\n        client.subscribe(`/topic/chat/${id}`, (message) => {\r\n          const msg = JSON.parse(message.body);\r\n          setMessages(prev => [...prev, msg]);\r\n        });\r\n\r\n        // Подписка на ошибки\r\n        client.subscribe(`/user/queue/errors`, (message) => {\r\n          console.error('Error:', message.body);\r\n          setError(message.body);\r\n        });\r\n      },\r\n      onDisconnect: () => {\r\n        setIsConnected(false);\r\n        console.log(\"WebSocket disconnected\");\r\n      },\r\n      onStompError: (frame) => {\r\n        console.error('Broker error:', frame.headers['message']);\r\n        setError(frame.headers['message'] || 'WebSocket error');\r\n      }\r\n    });\r\n\r\n    client.activate();\r\n    clientRef.current = client;\r\n\r\n    return () => {\r\n      if (client.connected) {\r\n        client.deactivate();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // ... остальные функции (loadMessages, sendMessage) остаются такими же ...\r\n\r\n  useEffect(() => {\r\n    const initializeChat = async () => {\r\n      const id = await fetchChatId();\r\n      if (id) {\r\n        setChatId(id);\r\n        await loadMessages(id);\r\n        initWebSocket(id);\r\n      }\r\n    };\r\n\r\n    initializeChat();\r\n\r\n    return () => {\r\n      if (clientRef.current && clientRef.current.connected) {\r\n        clientRef.current.deactivate();\r\n      }\r\n    };\r\n  }, [fetchChatId, initWebSocket, loadMessages]);\r\n\r\n  // ... остальной код компонента ...\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}