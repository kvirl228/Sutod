{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noket\\\\SocialTelegram\\\\fronted\\\\src\\\\Components\\\\Chats\\\\chats.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './Chat.css';\nimport ChatInfo from './Chat_info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chats() {\n  _s();\n  const [messangeinfo, setMessangeInfo] = useState([{\n    name: \"Петя\",\n    time: \"10:10\",\n    text: \"kek\"\n  }, {\n    name: \"Петя\",\n    time: \"10:10\",\n    text: \"keke\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats_block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder_block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user_folder_photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"user_folder_search\",\n          placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder\",\n        children: messangeinfo.map(item => /*#__PURE__*/_jsxDEV(ChatInfo, {\n          name: item.name,\n          text: item.text,\n          time: item.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_s(Chats, \"8QriPVl5OWZ/GKfiEDu06ufKTQU=\");\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["useState","ChatInfo","jsxDEV","_jsxDEV","Chats","_s","messangeinfo","setMessangeInfo","name","time","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","map","item","_c","$RefreshReg$"],"sources":["C:/Users/noket/SocialTelegram/fronted/src/Components/Chats/chats.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport './Chat.css'\r\nimport ChatInfo from './Chat_info';\r\nfunction Chats(){\r\n    const [messangeinfo, setMessangeInfo] = useState([{name:\"Петя\", time:\"10:10\", text:\"kek\"}, {name:\"Петя\", time:\"10:10\", text:\"keke\"}])\r\n    return(\r\n        <div className='chats_block'>\r\n            <div className=\"folder_block\">\r\n                <div className=\"user_block\">\r\n                    <div className=\"user_folder_photo\"></div>\r\n                    <input className=\"user_folder_search\" placeholder='Поиск'/>\r\n                </div>\r\n                <div className=\"folder\">\r\n                    {messangeinfo.map(item => \r\n                        <ChatInfo\r\n                            name={item.name}\r\n                            text = {item.text}\r\n                            time={item.time}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className='chat_block'>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Chats;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnC,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EACZ,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,CAAC;IAACQ,IAAI,EAAC,MAAM;IAAEC,IAAI,EAAC,OAAO;IAAEC,IAAI,EAAC;EAAK,CAAC,EAAE;IAACF,IAAI,EAAC,MAAM;IAAEC,IAAI,EAAC,OAAO;IAAEC,IAAI,EAAC;EAAM,CAAC,CAAC,CAAC;EACrI,oBACIP,OAAA;IAAKQ,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBT,OAAA;MAAKQ,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBT,OAAA;QAAKQ,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBT,OAAA;UAAKQ,SAAS,EAAC;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzCb,OAAA;UAAOQ,SAAS,EAAC,oBAAoB;UAACM,WAAW,EAAC;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eACNb,OAAA;QAAKQ,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAClBN,YAAY,CAACY,GAAG,CAACC,IAAI,iBAClBhB,OAAA,CAACF,QAAQ;UACLO,IAAI,EAAEW,IAAI,CAACX,IAAK;UAChBE,IAAI,EAAIS,IAAI,CAACT,IAAK;UAClBD,IAAI,EAAEU,IAAI,CAACV;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNb,OAAA;MAAKQ,SAAS,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGd;AAACX,EAAA,CAzBQD,KAAK;AAAAgB,EAAA,GAALhB,KAAK;AA2Bd,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}