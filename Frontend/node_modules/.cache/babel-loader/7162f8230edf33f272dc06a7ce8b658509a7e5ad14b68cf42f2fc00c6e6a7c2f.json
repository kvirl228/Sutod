{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noket\\\\Desktop\\\\Sutod\\\\fronted\\\\src\\\\Components\\\\Chats\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport SockJS from 'sockjs-client';\nimport { Client, Stomp } from '@stomp/stompjs';\nimport axios from \"axios\";\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  userId,\n  user2Id,\n  username\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [chatId, setChatId] = useState(0);\n  const [stompClient, setStompClient] = useState(null);\n  const containerRef = useRef(null);\n  const pageRef = useRef(0);\n  const fetchChatId = useCallback(async () => {\n    console.log(userId, user2Id);\n    try {\n      const response = await fetch(`http://localhost:8080/api/chats/twoId?id1=${userId}&id2=${user2Id}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (response.ok) {\n        const id = await response.text();\n        setChatId(id);\n        return id;\n      } else {\n        const createResponse = await fetch('http://localhost:8080/api/chats', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId,\n            user2Id\n          })\n        });\n        if (createResponse.ok) {\n          return await createResponse.text();\n        } else {}\n      }\n    } catch (error) {\n      console.error('Chat error:', error);\n      return null;\n    }\n  }, [userId, user2Id]);\n  const refreshToken = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/refresh\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const token = await response.text();\n        localStorage.setItem(\"token\", token);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  };\n  const subscribe = async chat => {\n    console.log(messages);\n    try {\n      const response = await fetch(`http://localhost:8080/api/messages/${chat}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setMessages(prev => [data, ...prev]);\n        await subscribe();\n      } else if (response.status === 401) {\n        if (await refreshToken()) {\n          return await subscribe();\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n    }\n  };\n  const sendMessage = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/messages/send/${user2Id}`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: inputText,\n          senderId: userId\n        })\n      });\n      if (response.ok) {\n        const message = await response.json();\n        const newMessage = [...messages, message];\n        setMessages(newMessage);\n      } else {\n        alert(\"Eror\");\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n    }\n  };\n  useEffect(() => {\n    const init = async () => {\n      const id = await fetchChatId();\n      if (id) {\n        console.log(id);\n        subscribe(id);\n      }\n    };\n    init();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userInfo_chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userName_chat\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.senderId === userId ? 'my-message' : 'their-message',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: new Date(msg.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, `${msg.timestamp}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"push_chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n        className: \"input_chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat_button\",\n        onClick: sendMessage,\n        disabled: !inputText.trim(),\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"qc6yWoYQcu9QYFDuiFS+gBOlJQs=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useState","useRef","useCallback","SockJS","Client","Stomp","axios","jsxDEV","_jsxDEV","Chat","userId","user2Id","username","_s","messages","setMessages","inputText","setInputText","isLoading","setIsLoading","chatId","setChatId","stompClient","setStompClient","containerRef","pageRef","fetchChatId","console","log","response","fetch","headers","localStorage","getItem","ok","id","text","createResponse","method","body","JSON","stringify","error","refreshToken","credentials","token","setItem","subscribe","chat","data","json","prev","status","sendMessage","message","senderId","newMessage","alert","init","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","Date","timestamp","toLocaleTimeString","value","onChange","e","target","placeholder","onClick","disabled","trim","_c","$RefreshReg$"],"sources":["C:/Users/noket/Desktop/Sutod/fronted/src/Components/Chats/Chat.jsx"],"sourcesContent":["import { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport SockJS from 'sockjs-client';\r\nimport { Client, Stomp } from '@stomp/stompjs';\r\nimport axios from \"axios\";\r\nimport './Chat.css';\r\n\r\nfunction Chat({ userId, user2Id, username }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const[chatId, setChatId] = useState(0)\r\n  const[stompClient, setStompClient] = useState(null)\r\n\r\n  const containerRef = useRef(null);\r\n  const pageRef = useRef(0);\r\n\r\n\r\n  const fetchChatId = useCallback(async () => {\r\n    console.log(userId, user2Id)\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/api/chats/twoId?id1=${userId}&id2=${user2Id}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const id = await response.text();\r\n        setChatId(id)\r\n        return id;\r\n      } \r\n      else{\r\n        const createResponse = await fetch('http://localhost:8080/api/chats', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            userId,\r\n            user2Id\r\n          })\r\n        });\r\n\r\n        if (createResponse.ok) {\r\n          return await createResponse.text();\r\n        }\r\n        else{\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Chat error:', error);\r\n      return null;\r\n    }\r\n  }, [userId, user2Id]);\r\n\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/auth/refresh\", {\r\n                  method: \"POST\",\r\n                  credentials: \"include\",\r\n                  headers: { \"Content-Type\": \"application/json\" }\r\n              });\r\n\r\n              if (response.ok) {\r\n                  const token = await response.text()\r\n                  localStorage.setItem(\"token\", token)\r\n                  return true\r\n              }\r\n              \r\n              return false\r\n          } catch (error) {\r\n              \r\n              return false\r\n          }\r\n  }\r\n  \r\n  const subscribe = async (chat) => {\r\n    console.log(messages)\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/api/messages/${chat}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        });\r\n            \r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            setMessages(prev => [data, ...prev])\r\n            await subscribe()\r\n        } \r\n        else if (response.status === 401) {\r\n            if (await refreshToken()) {\r\n              return await subscribe()\r\n            }\r\n        }\r\n      } \r\n      catch (error) {\r\n        console.error('Ошибка:', error);\r\n      }\r\n  }\r\n\r\n  const sendMessage = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/api/messages/send/${user2Id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          message: inputText,\r\n          senderId: userId,\r\n        })\r\n      });\r\n\r\n      \r\n      if(response.ok){\r\n            const message = await response.json()\r\n            const newMessage = [...messages, message]\r\n            setMessages(newMessage)\r\n        }\r\n        else{\r\n            alert(\"Eror\")\r\n        }\r\n    } catch (error) {\r\n      console.error('Ошибка:', error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const id = await fetchChatId()\r\n      if (id) {\r\n        console.log(id)\r\n        subscribe(id)\r\n      }\r\n    }\r\n    init()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"userInfo_chat\">\r\n        <div className=\"userName_chat\">{username}</div>\r\n        <div className=\"connection-status\">\r\n          \r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"messages-container\">\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={`${msg.timestamp}-${index}`}\r\n            className={msg.senderId === userId ? 'my-message' : 'their-message'}\r\n          >\r\n            <div className=\"message-content\">{msg.message}</div>\r\n            <div className=\"message-time\">\r\n              {new Date(msg.timestamp).toLocaleTimeString()}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"push_chat\">\r\n        <input value={inputText} onChange={(e) => setInputText(e.target.value)} placeholder=\"Введите сообщение\" className=\"input_chat\"/>\r\n        <button className=\"chat_button\" onClick={sendMessage} disabled={!inputText.trim()}>Отправить</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}