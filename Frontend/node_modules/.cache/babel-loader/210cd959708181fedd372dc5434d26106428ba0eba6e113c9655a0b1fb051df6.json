{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Adjusts the contrast of the image.\n * @memberOf Actions.Adjust\n * @extends SDK.Action\n */\nclass ContrastAction extends Action {\n  constructor(level) {\n    super();\n    this._actionModel = {\n      actionType: 'contrast'\n    };\n    if (level !== undefined) {\n      this.level(level);\n    }\n  }\n  /**\n   * @description Sets the level of contrast.\n   * @param {number} level The level of contrast.\n   *                       Range (sigmoidal): -100 to 100. Default: 0.\n   *                       Range (linear): 1 to 200. Default: 100.\n   */\n  level(level) {\n    this.levelValue = level;\n    this._actionModel.level = level;\n    return this;\n  }\n  /**\n   * @description Sets the function type for the contrast effect.\n   * @param {string} functionType The function to use for the contrast effect.\n   *                              Possible values: 'sigmoidal' (default), 'linear'\n   */\n  functionType(functionType) {\n    this.functionTypeValue = functionType;\n    this._actionModel.functionType = functionType;\n    return this;\n  }\n  prepareQualifiers() {\n    let qualifierValueStr = 'contrast';\n    if (this.levelValue !== undefined) {\n      if (this.functionTypeValue) {\n        // If function type is specified, use the level_ prefix format\n        qualifierValueStr += `:level_${this.levelValue}`;\n      } else {\n        // If no function type, use simple format\n        qualifierValueStr += `:${this.levelValue}`;\n      }\n    }\n    if (this.functionTypeValue) {\n      qualifierValueStr += `;type_${this.functionTypeValue}`;\n    }\n    const qualifierValue = new QualifierValue(qualifierValueStr);\n    this.addQualifier(new Qualifier('e', qualifierValue));\n    return this;\n  }\n  static fromJson(actionModel) {\n    const {\n      level,\n      functionType\n    } = actionModel;\n    // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n    const result = new this(level);\n    if (functionType) {\n      result.functionType(functionType);\n    }\n    return result;\n  }\n}\nexport { ContrastAction };","map":{"version":3,"names":["Action","QualifierValue","Qualifier","ContrastAction","constructor","level","_actionModel","actionType","undefined","levelValue","functionType","functionTypeValue","prepareQualifiers","qualifierValueStr","qualifierValue","addQualifier","fromJson","actionModel","result"],"sources":["C:/Users/markp/Desktop/Sutod/Frontend/node_modules/@cloudinary/transformation-builder-sdk/actions/adjust/ContrastAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Adjusts the contrast of the image.\n * @memberOf Actions.Adjust\n * @extends SDK.Action\n */\nclass ContrastAction extends Action {\n    constructor(level) {\n        super();\n        this._actionModel = { actionType: 'contrast' };\n        if (level !== undefined) {\n            this.level(level);\n        }\n    }\n    /**\n     * @description Sets the level of contrast.\n     * @param {number} level The level of contrast.\n     *                       Range (sigmoidal): -100 to 100. Default: 0.\n     *                       Range (linear): 1 to 200. Default: 100.\n     */\n    level(level) {\n        this.levelValue = level;\n        this._actionModel.level = level;\n        return this;\n    }\n    /**\n     * @description Sets the function type for the contrast effect.\n     * @param {string} functionType The function to use for the contrast effect.\n     *                              Possible values: 'sigmoidal' (default), 'linear'\n     */\n    functionType(functionType) {\n        this.functionTypeValue = functionType;\n        this._actionModel.functionType = functionType;\n        return this;\n    }\n    prepareQualifiers() {\n        let qualifierValueStr = 'contrast';\n        if (this.levelValue !== undefined) {\n            if (this.functionTypeValue) {\n                // If function type is specified, use the level_ prefix format\n                qualifierValueStr += `:level_${this.levelValue}`;\n            }\n            else {\n                // If no function type, use simple format\n                qualifierValueStr += `:${this.levelValue}`;\n            }\n        }\n        if (this.functionTypeValue) {\n            qualifierValueStr += `;type_${this.functionTypeValue}`;\n        }\n        const qualifierValue = new QualifierValue(qualifierValueStr);\n        this.addQualifier(new Qualifier('e', qualifierValue));\n        return this;\n    }\n    static fromJson(actionModel) {\n        const { level, functionType } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(level);\n        if (functionType) {\n            result.functionType(functionType);\n        }\n        return result;\n    }\n}\nexport { ContrastAction };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,SAAS,QAAQ,uCAAuC;AACjE;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,SAASH,MAAM,CAAC;EAChCI,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,YAAY,GAAG;MAAEC,UAAU,EAAE;IAAW,CAAC;IAC9C,IAAIF,KAAK,KAAKG,SAAS,EAAE;MACrB,IAAI,CAACH,KAAK,CAACA,KAAK,CAAC;IACrB;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;EACIA,KAAKA,CAACA,KAAK,EAAE;IACT,IAAI,CAACI,UAAU,GAAGJ,KAAK;IACvB,IAAI,CAACC,YAAY,CAACD,KAAK,GAAGA,KAAK;IAC/B,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;EACIK,YAAYA,CAACA,YAAY,EAAE;IACvB,IAAI,CAACC,iBAAiB,GAAGD,YAAY;IACrC,IAAI,CAACJ,YAAY,CAACI,YAAY,GAAGA,YAAY;IAC7C,OAAO,IAAI;EACf;EACAE,iBAAiBA,CAAA,EAAG;IAChB,IAAIC,iBAAiB,GAAG,UAAU;IAClC,IAAI,IAAI,CAACJ,UAAU,KAAKD,SAAS,EAAE;MAC/B,IAAI,IAAI,CAACG,iBAAiB,EAAE;QACxB;QACAE,iBAAiB,IAAI,UAAU,IAAI,CAACJ,UAAU,EAAE;MACpD,CAAC,MACI;QACD;QACAI,iBAAiB,IAAI,IAAI,IAAI,CAACJ,UAAU,EAAE;MAC9C;IACJ;IACA,IAAI,IAAI,CAACE,iBAAiB,EAAE;MACxBE,iBAAiB,IAAI,SAAS,IAAI,CAACF,iBAAiB,EAAE;IAC1D;IACA,MAAMG,cAAc,GAAG,IAAIb,cAAc,CAACY,iBAAiB,CAAC;IAC5D,IAAI,CAACE,YAAY,CAAC,IAAIb,SAAS,CAAC,GAAG,EAAEY,cAAc,CAAC,CAAC;IACrD,OAAO,IAAI;EACf;EACA,OAAOE,QAAQA,CAACC,WAAW,EAAE;IACzB,MAAM;MAAEZ,KAAK;MAAEK;IAAa,CAAC,GAAGO,WAAW;IAC3C;IACA;IACA,MAAMC,MAAM,GAAG,IAAI,IAAI,CAACb,KAAK,CAAC;IAC9B,IAAIK,YAAY,EAAE;MACdQ,MAAM,CAACR,YAAY,CAACA,YAAY,CAAC;IACrC;IACA,OAAOQ,MAAM;EACjB;AACJ;AACA,SAASf,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}