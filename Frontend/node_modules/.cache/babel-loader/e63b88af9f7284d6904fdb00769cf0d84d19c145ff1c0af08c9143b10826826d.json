{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noket\\\\SocialTelegram\\\\fronted\\\\src\\\\Components\\\\Chats\\\\chats.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './Chat.css';\nimport ChatInfo from './Chat_info';\nimport Chat from './Chat';\nimport ReactDOM from 'react-dom/client';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chats() {\n  _s();\n  const navigate = useNavigate();\n  const [search, setSearch] = useState('');\n  const [searchCheck, setSearchCheck] = useState(true);\n  const [isClick, setIsClick] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    id: -1\n  });\n  const handleChange = e => {\n    setSearch(e.target.value);\n    if (e.target.value.trim() == '') {\n      setSearchCheck(true);\n    } else {\n      setSearchCheck(false);\n    }\n  };\n  async function refersh() {\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/refresh\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        console.log(await response.text());\n        setUserInfo({\n          username: await response.text().username,\n          id: await response.text().username\n        });\n        console.log(userInfo);\n      } else {\n        navigate('/');\n      }\n    } catch (error) {\n      navigate('/');\n    }\n  }\n  async function searchUser() {\n    try {\n      const response = await fetch(`http://localhost:8080/api/users/${search}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        alert(\"Круто\");\n        setUserInfo(await response.text());\n        console.log(userInfo);\n      } else if (response.status === 401) {\n        refersh();\n      } else {\n        alert('Ошибка при отправке данных');\n        console.log(response.status);\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats_block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder_block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user_folder_photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"user_folder_search\",\n          placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n          value: search,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: searchUser,\n          children: \"src\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder\",\n        children: searchCheck ?\n        /*#__PURE__*/\n        // <ChatInfo\n        //     name={item.name}\n        //     text = {item.text}\n        //     time={item.time}\n        //     img={item.img}\n        //     func={() => clickHandler(item.chatId)}\n        // /> \n        _jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"ssss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_block\",\n      children: [isClick ? /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(Chat\n      // id={chooseChat}\n      , {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(Chats, \"/qSopN8MXPrWvg62iM9lRnAWuEE=\", false, function () {\n  return [useNavigate];\n});\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["useState","useEffect","ChatInfo","Chat","ReactDOM","useNavigate","jsxDEV","_jsxDEV","Chats","_s","navigate","search","setSearch","searchCheck","setSearchCheck","isClick","setIsClick","userInfo","setUserInfo","username","id","handleChange","e","target","value","trim","refersh","response","fetch","method","credentials","headers","ok","console","log","text","error","searchUser","localStorage","getItem","alert","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/noket/SocialTelegram/fronted/src/Components/Chats/chats.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './Chat.css'\r\nimport ChatInfo from './Chat_info';\r\nimport Chat from './Chat';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Chats(){\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const[search, setSearch] = useState('')\r\n    const[searchCheck, setSearchCheck] = useState(true)\r\n    const[isClick, setIsClick] = useState(false)\r\n    const[userInfo, setUserInfo] = useState({username:'', id:-1})\r\n\r\n\r\n    const handleChange = (e) => {\r\n      setSearch(e.target.value)\r\n      if(e.target.value.trim()==''){\r\n        setSearchCheck(true)\r\n      }\r\n      else{\r\n        setSearchCheck(false)\r\n      }\r\n    }\r\n\r\n    async function refersh() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:8080/auth/refresh\", {\r\n          method: \"POST\",\r\n          credentials: \"include\", \r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        });\r\n\r\n        if (response.ok) {\r\n          console.log(await response.text()); \r\n          setUserInfo(\r\n            {\r\n              username: await response.text().username,\r\n              id: await response.text().username,\r\n            }\r\n          )\r\n          console.log(userInfo)\r\n        } else {\r\n          navigate('/')\r\n        }\r\n      } catch (error) {\r\n        navigate('/')\r\n      }\r\n    }\r\n\r\n    async function searchUser(){\r\n      try {\r\n      const response = await fetch(`http://localhost:8080/api/users/${search}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Круто\")\r\n        setUserInfo(await response.text())\r\n        console.log(userInfo)\r\n      } \r\n      else if (response.status === 401) {\r\n        refersh()\r\n      }\r\n      else {\r\n        alert('Ошибка при отправке данных');\r\n        console.log(response.status)\r\n      } \r\n      } catch (error) {\r\n        console.error('Ошибка:', error);\r\n      }\r\n    }\r\n\r\n    return(\r\n        <div className='chats_block'>\r\n            <div className=\"folder_block\">\r\n                <div className=\"user_block\">\r\n                    <div className=\"user_folder_photo\"></div>\r\n                    <input className=\"user_folder_search\" placeholder='Поиск' value={search} onChange={handleChange}/>\r\n                    <button onClick={searchUser}>src</button>\r\n                </div>\r\n                <div className=\"folder\">\r\n                    {/* {messangeinfo.map(item => \r\n                        <ChatInfo\r\n                            name={item.name}\r\n                            text = {item.text}\r\n                            time={item.time}\r\n                            img={item.img}\r\n                            func={() => clickHandler(item.chatId)}\r\n                        />\r\n                    )} */}\r\n\r\n                    {searchCheck ? \r\n                      // <ChatInfo\r\n                      //     name={item.name}\r\n                      //     text = {item.text}\r\n                      //     time={item.time}\r\n                      //     img={item.img}\r\n                      //     func={() => clickHandler(item.chatId)}\r\n                      // /> \r\n                      <div></div>\r\n                      : \r\n                      <div>ssss</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className='chat_block'>\r\n\r\n              {isClick ? <Chat/> : <div></div>}\r\n                <Chat\r\n                    // id={chooseChat}\r\n                />\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Chats;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}