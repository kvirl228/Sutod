{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noket\\\\SocialTelegram\\\\fronted\\\\src\\\\Components\\\\Chats\\\\chats.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './Chat.css';\nimport ChatInfo from './Chat_info';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chats() {\n  _s();\n  const navigate = useNavigate();\n  const [search, setSearch] = useState('');\n  const [searchCheck, setSearchCheck] = useState(true);\n  const [chooseCaht, setChooseChat] = useState(-1);\n  const [userInfo, setUserInfo] = useState([{\n    username: '',\n    Id: -1\n  }]);\n  const handleChange = e => {\n    setSearch(e.target.value);\n    if (e.target.value.trim() == '') {\n      setSearchCheck(true);\n    }\n  };\n  async function refersh() {\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/refresh\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const token = await response.text();\n        localStorage.setItem(\"token\", token);\n      } else {\n        navigate('/');\n      }\n    } catch (error) {\n      navigate('/');\n    }\n  }\n  async function searchUser() {\n    try {\n      const response = await fetch(`http://localhost:8080/api/users/${search}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        alert(\"Круто\");\n        const data = await response.json();\n        console.log(data);\n        setUserInfo([data]);\n        console.log(userInfo[0].Id);\n        setChooseChat(userInfo[0].Id);\n        setSearchCheck(false);\n      } else if (response.status == 401) {\n        await refersh();\n        setSearchCheck(true);\n      } else {\n        alert('Ошибка при отправке данных');\n        setSearchCheck(true);\n        console.log(response.status);\n      }\n    } catch (error) {\n      setSearchCheck(true);\n      console.error('Ошибка:', error);\n    }\n  }\n  async function getAllChats() {\n    try {\n      const response = await fetch(`http://localhost:8080/api/users/${search}`);\n    } catch (error) {}\n  }\n  const [chooseChat, setchooseChat] = useState(0);\n  function clickHandler(id) {\n    setchooseChat(id);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats_block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder_block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user_folder_photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"user_folder_search\",\n          placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n          value: search,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: searchUser,\n          children: \"src\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder\",\n        children: searchCheck ?\n        /*#__PURE__*/\n        // <ChatInfo\n        //     name={item.name}\n        //     text = {item.text}\n        //     time={item.time}\n        //     img={item.img}\n        //     func={() => clickHandler(item.chatId)}\n        // /> \n        _jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ChatInfo, {\n            name: userInfo[0].username,\n            text: \"\",\n            time: \"\",\n            img: \"\",\n            func: () => clickHandler(userInfo[0].Id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(Chats, \"bC6u9K30ujvLl8IbRn9sO5luCnU=\", false, function () {\n  return [useNavigate];\n});\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["useState","useEffect","ChatInfo","useNavigate","jsxDEV","_jsxDEV","Chats","_s","navigate","search","setSearch","searchCheck","setSearchCheck","chooseCaht","setChooseChat","userInfo","setUserInfo","username","Id","handleChange","e","target","value","trim","refersh","response","fetch","method","credentials","headers","ok","token","text","localStorage","setItem","error","searchUser","getItem","alert","data","json","console","log","status","getAllChats","chooseChat","setchooseChat","clickHandler","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","name","time","img","func","_c","$RefreshReg$"],"sources":["C:/Users/noket/SocialTelegram/fronted/src/Components/Chats/chats.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './Chat.css'\r\nimport ChatInfo from './Chat_info';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Chats(){\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const[search, setSearch] = useState('')\r\n    const[searchCheck, setSearchCheck] = useState(true)\r\n    const[chooseCaht, setChooseChat] = useState(-1)\r\n    const[userInfo, setUserInfo] = useState([{username:'', Id:-1}])\r\n\r\n\r\n    const handleChange = (e) => {\r\n      setSearch(e.target.value)\r\n      if(e.target.value.trim() == ''){\r\n                setSearchCheck(true)\r\n\r\n      }\r\n    }\r\n\r\n    async function refersh() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:8080/auth/refresh\", {\r\n          method: \"POST\",\r\n          credentials: \"include\", \r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        });\r\n\r\n        if (response.ok) {\r\n          const token = await response.text()\r\n          localStorage.setItem(\"token\", token)\r\n        } else {\r\n          navigate('/')\r\n        }\r\n      } catch (error) {\r\n        navigate('/')\r\n      }\r\n    }\r\n    \r\n    async function searchUser(){\r\n      try {\r\n      const response = await fetch(`http://localhost:8080/api/users/${search}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Круто\")\r\n        const data = await response.json();\r\n        console.log(data)\r\n        setUserInfo([ data])\r\n        console.log(userInfo[0].Id)\r\n        setChooseChat(userInfo[0].Id)\r\n        setSearchCheck(false)\r\n      } \r\n      else if (response.status == 401) {\r\n        await refersh()\r\n        setSearchCheck(true)\r\n        \r\n      }\r\n      else {\r\n        alert('Ошибка при отправке данных');\r\n        setSearchCheck(true)\r\n        console.log(response.status)\r\n      } \r\n      } catch (error) {\r\n        setSearchCheck(true)\r\n        console.error('Ошибка:', error);\r\n\r\n      }\r\n    }\r\n\r\n    async function getAllChats(){\r\n      try{\r\n        const response = await fetch(`http://localhost:8080/api/users/${search}`)\r\n      } catch(error){\r\n\r\n      }\r\n    } \r\n\r\n    const [chooseChat, setchooseChat] = useState(0);\r\n    function clickHandler(id){\r\n        setchooseChat(id)\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <div className='chats_block'>\r\n            <div className=\"folder_block\">\r\n                <div className=\"user_block\">\r\n                    <div className=\"user_folder_photo\"></div>\r\n                    <input className=\"user_folder_search\" placeholder='Поиск' value={search} onChange={handleChange}/>\r\n                    <button onClick={searchUser}>src</button>\r\n                </div>\r\n                <div className=\"folder\">\r\n                    {/* {messangeinfo.map(item => \r\n                        <ChatInfo\r\n                            name={item.name}\r\n                            text = {item.text}\r\n                            time={item.time}\r\n                            img={item.img}\r\n                            func={() => clickHandler(item.chatId)}\r\n                        />\r\n                    )} */}\r\n\r\n                    {searchCheck ? \r\n                      // <ChatInfo\r\n                      //     name={item.name}\r\n                      //     text = {item.text}\r\n                      //     time={item.time}\r\n                      //     img={item.img}\r\n                      //     func={() => clickHandler(item.chatId)}\r\n                      // /> \r\n                      <div></div>\r\n                      : \r\n                      <div>\r\n                        <ChatInfo\r\n                            name={userInfo[0].username}\r\n                            text = {\"\"}\r\n                            time={\"\"}\r\n                            img={\"\"}\r\n                            func={() => clickHandler(userInfo[0].Id)}\r\n                          /> \r\n                      </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className='chat_block'>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Chats;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}