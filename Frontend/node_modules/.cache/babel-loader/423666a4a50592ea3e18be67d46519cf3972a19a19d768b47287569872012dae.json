{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noket\\\\Desktop\\\\Sutod\\\\fronted\\\\src\\\\Components\\\\Chats\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport SockJS from 'sockjs-client';\nimport { Client } from '@stomp/stompjs';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  userId,\n  user2Id,\n  username\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [chatId, setChatId] = useState(null);\n  const [inputText, setInputText] = useState('');\n  const [hasMore, setHasMore] = useState(true);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const clientRef = useRef(null);\n  const isFirstLoad = useRef(true);\n  const containerRef = useRef(null);\n  const pageRef = useRef(0);\n\n  // Проверка существования чата\n  const checkChatExists = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/chat/with/${user2Id}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (response.ok) {\n        const chatId = await response.text();\n        return chatId !== 'null' ? chatId : null;\n      }\n      return null;\n    } catch (error) {\n      console.error('Error checking chat:', error);\n      return null;\n    }\n  }, [user2Id]);\n\n  // Загрузка сообщений\n  const loadMessages = useCallback(async chatId => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`http://localhost:8080/api/messages/chat/${chatId}/recent`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (response.ok) {\n        const messages = await response.json();\n        setMessages(messages.reverse());\n      }\n    } catch (error) {\n      console.error('Error loading messages:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Инициализация WebSocket\n  const initWebSocket = useCallback(() => {\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000,\n      connectHeaders: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      onConnect: () => {\n        setIsConnected(true);\n        console.log(\"WebSocket connected\");\n\n        // Подписка на личные сообщения\n        client.subscribe(`/user/queue/messages`, message => {\n          const msg = JSON.parse(message.body);\n          setMessages(prev => [...prev, msg]);\n        });\n\n        // Подписка на ошибки\n        client.subscribe(`/user/queue/errors`, message => {\n          console.error('WebSocket error:', message.body);\n        });\n      },\n      onDisconnect: () => {\n        setIsConnected(false);\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n    return () => {\n      client.deactivate();\n    };\n  }, []);\n\n  // Отправка сообщения\n  const sendMessage = useCallback(async () => {\n    if (!inputText.trim() || !isConnected) return;\n    try {\n      clientRef.current.publish({\n        destination: `/app/chat.send.${user2Id}`,\n        body: JSON.stringify({\n          content: inputText\n        }),\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setInputText('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  }, [inputText, isConnected, user2Id]);\n\n  // Инициализация чата\n  useEffect(() => {\n    const initializeChat = async () => {\n      const existingChatId = await checkChatExists();\n      if (existingChatId) {\n        setChatId(existingChatId);\n        await loadMessages(existingChatId);\n      }\n      initWebSocket();\n    };\n    initializeChat();\n    return () => {\n      if (clientRef.current) {\n        clientRef.current.deactivate();\n      }\n    };\n  }, [checkChatExists, loadMessages, initWebSocket]);\n\n  // Автоскролл при новых сообщениях\n  useEffect(() => {\n    if (containerRef.current && !isFirstLoad.current && messages.length > 0) {\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }\n    isFirstLoad.current = false;\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userInfo_chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userName_chat\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\",\n        children: isConnected ? 'Online' : 'Connecting...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      ref: containerRef,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }, this), messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.senderId === userId ? 'my-message' : 'their-message',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: new Date(msg.timestamp).toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && sendMessage(),\n        placeholder: \"Type a message\",\n        disabled: !isConnected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: !inputText.trim() || !isConnected,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"iBJEB4JCjyG/XyL83kNjfRP2WTk=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useState","useRef","useCallback","SockJS","Client","jsxDEV","_jsxDEV","Chat","userId","user2Id","username","_s","messages","setMessages","chatId","setChatId","inputText","setInputText","hasMore","setHasMore","isConnected","setIsConnected","isLoading","setIsLoading","clientRef","isFirstLoad","containerRef","pageRef","checkChatExists","response","fetch","headers","localStorage","getItem","ok","text","error","console","loadMessages","json","reverse","initWebSocket","socket","client","webSocketFactory","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","connectHeaders","Authorization","onConnect","log","subscribe","message","msg","JSON","parse","body","prev","onDisconnect","activate","current","deactivate","sendMessage","trim","publish","destination","stringify","content","initializeChat","existingChatId","length","scrollTop","scrollHeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","senderId","Date","timestamp","toLocaleTimeString","hour","minute","id","value","onChange","e","target","onKeyPress","key","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/noket/Desktop/Sutod/fronted/src/Components/Chats/Chat.jsx"],"sourcesContent":["import { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport SockJS from 'sockjs-client';\r\nimport { Client } from '@stomp/stompjs';\r\nimport './Chat.css';\r\n\r\nfunction Chat({ userId, user2Id, username }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatId, setChatId] = useState(null);\r\n  const [inputText, setInputText] = useState('');\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const clientRef = useRef(null);\r\n  const isFirstLoad = useRef(true);\r\n  const containerRef = useRef(null);\r\n  const pageRef = useRef(0);\r\n\r\n  // Проверка существования чата\r\n  const checkChatExists = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/api/chat/with/${user2Id}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const chatId = await response.text();\r\n        return chatId !== 'null' ? chatId : null;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error('Error checking chat:', error);\r\n      return null;\r\n    }\r\n  }, [user2Id]);\r\n\r\n  // Загрузка сообщений\r\n  const loadMessages = useCallback(async (chatId) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/api/messages/chat/${chatId}/recent`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const messages = await response.json();\r\n        setMessages(messages.reverse());\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading messages:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Инициализация WebSocket\r\n  const initWebSocket = useCallback(() => {\r\n    const socket = new SockJS(\"http://localhost:8080/ws\");\r\n    const client = new Client({\r\n      webSocketFactory: () => socket,\r\n      reconnectDelay: 5000,\r\n      heartbeatIncoming: 4000,\r\n      heartbeatOutgoing: 4000,\r\n      connectHeaders: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n      },\r\n      onConnect: () => {\r\n        setIsConnected(true);\r\n        console.log(\"WebSocket connected\");\r\n\r\n        // Подписка на личные сообщения\r\n        client.subscribe(`/user/queue/messages`, (message) => {\r\n          const msg = JSON.parse(message.body);\r\n          setMessages(prev => [...prev, msg]);\r\n        });\r\n\r\n        // Подписка на ошибки\r\n        client.subscribe(`/user/queue/errors`, (message) => {\r\n          console.error('WebSocket error:', message.body);\r\n        });\r\n      },\r\n      onDisconnect: () => {\r\n        setIsConnected(false);\r\n      }\r\n    });\r\n\r\n    client.activate();\r\n    clientRef.current = client;\r\n\r\n    return () => {\r\n      client.deactivate();\r\n    };\r\n  }, []);\r\n\r\n  // Отправка сообщения\r\n  const sendMessage = useCallback(async () => {\r\n    if (!inputText.trim() || !isConnected) return;\r\n\r\n    try {\r\n      clientRef.current.publish({\r\n        destination: `/app/chat.send.${user2Id}`,\r\n        body: JSON.stringify({\r\n          content: inputText\r\n        }),\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n        }\r\n      });\r\n      setInputText('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  }, [inputText, isConnected, user2Id]);\r\n\r\n  // Инициализация чата\r\n  useEffect(() => {\r\n    const initializeChat = async () => {\r\n      const existingChatId = await checkChatExists();\r\n      if (existingChatId) {\r\n        setChatId(existingChatId);\r\n        await loadMessages(existingChatId);\r\n      }\r\n      initWebSocket();\r\n    };\r\n\r\n    initializeChat();\r\n\r\n    return () => {\r\n      if (clientRef.current) {\r\n        clientRef.current.deactivate();\r\n      }\r\n    };\r\n  }, [checkChatExists, loadMessages, initWebSocket]);\r\n\r\n  // Автоскролл при новых сообщениях\r\n  useEffect(() => {\r\n    if (containerRef.current && !isFirstLoad.current && messages.length > 0) {\r\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n    }\r\n    isFirstLoad.current = false;\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"userInfo_chat\">\r\n        <div className=\"userName_chat\">{username}</div>\r\n        <div className=\"connection-status\">\r\n          {isConnected ? 'Online' : 'Connecting...'}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"messages-container\" ref={containerRef}>\r\n        {isLoading && <div className=\"loading-indicator\">Loading...</div>}\r\n        {messages.map((msg) => (\r\n          <div\r\n            key={msg.id}\r\n            className={msg.senderId === userId ? 'my-message' : 'their-message'}\r\n          >\r\n            <div className=\"message-content\">{msg.content}</div>\r\n            <div className=\"message-time\">\r\n              {new Date(msg.timestamp).toLocaleTimeString([], { \r\n                hour: '2-digit', \r\n                minute: '2-digit' \r\n              })}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"message-input-container\">\r\n        <input\r\n          value={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n          onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n          placeholder=\"Type a message\"\r\n          disabled={!isConnected}\r\n        />\r\n        <button \r\n          onClick={sendMessage}\r\n          disabled={!inputText.trim() || !isConnected}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}