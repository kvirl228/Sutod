{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noket\\\\SocialTelegram\\\\fronted\\\\src\\\\Components\\\\Chats\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport SockJS from 'sockjs-client';\nimport { Client } from '@stomp/stompjs';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat(props) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messageText, setMessageText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const stompClientRef = useRef(null);\n  const bottomRef = useRef(null);\n\n  // WebSocket init\n  useEffect(() => {\n    const socket = new SockJS('http://localhost:8080/ws'); // URL WebSocket'а\n    const stompClient = new Client({\n      webSocketFactory: () => socket,\n      debug: str => console.log(str),\n      reconnectDelay: 5000\n    });\n    stompClient.onConnect = () => {\n      stompClient.subscribe(`/topic/chat/${props.chatId}`, msg => {\n        const newMessage = JSON.parse(msg.body);\n        setMessages(prev => [...prev, newMessage]);\n      });\n    };\n    stompClient.activate();\n    stompClientRef.current = stompClient;\n    return () => stompClient.deactivate();\n  }, [chatId]);\n\n  // Получить последние 50 сообщений\n  useEffect(() => {\n    fetch(`http://localhost:8080/api/messages/last/${chatId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => res.json()).then(data => {\n      setMessages(data.reverse()); // Упорядочим от старых к новым\n      scrollToBottom();\n    });\n  }, [chatId]);\n\n  // Прокрутка вниз после отправки\n  const scrollToBottom = () => {\n    var _bottomRef$current;\n    (_bottomRef$current = bottomRef.current) === null || _bottomRef$current === void 0 ? void 0 : _bottomRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const sendMessage = () => {\n    if (!messageText.trim()) return;\n    const messageObj = {\n      chatId,\n      senderId: currentUserId,\n      text: messageText,\n      timestamp: new Date().toISOString()\n    };\n    stompClientRef.current.publish({\n      destination: `/${chatId}/chat.send`,\n      body: JSON.stringify(messageObj)\n    });\n    setMessageText('');\n  };\n  const loadMore = async () => {\n    if (messages.length === 0) return;\n    setLoading(true);\n    const lastTimestamp = messages[0].timestamp;\n    const res = await fetch(`http://localhost:8080/api/messages/load?chatId=${chatId}&before=${lastTimestamp}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    const olderMessages = await res.json();\n    setMessages(prev => [...olderMessages.reverse(), ...prev]);\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userInfo_chat\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userName_chat\",\n        children: props.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: msg.senderId === currentUserId ? 'my-message' : 'their-message',\n      children: msg.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"push_chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input_chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat_button\",\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"5K/y9X8Hh/tG9GH9Jj6rXVCcz7Q=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useState","useRef","SockJS","Client","jsxDEV","_jsxDEV","Chat","props","_s","messages","setMessages","messageText","setMessageText","loading","setLoading","stompClientRef","bottomRef","socket","stompClient","webSocketFactory","debug","str","console","log","reconnectDelay","onConnect","subscribe","chatId","msg","newMessage","JSON","parse","body","prev","activate","current","deactivate","fetch","headers","Authorization","localStorage","getItem","then","res","json","data","reverse","scrollToBottom","_bottomRef$current","scrollIntoView","behavior","sendMessage","trim","messageObj","senderId","currentUserId","text","timestamp","Date","toISOString","publish","destination","stringify","loadMore","length","lastTimestamp","olderMessages","children","className","username","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","_c","$RefreshReg$"],"sources":["C:/Users/noket/SocialTelegram/fronted/src/Components/Chats/Chat.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport SockJS from 'sockjs-client';\r\nimport { Client } from '@stomp/stompjs';\r\nimport'./Chat.css'\r\n\r\nfunction Chat(props){\r\n\r\n    const[messages, setMessages] = useState([])\r\n    const[messageText, setMessageText] = useState('');\r\n    const[loading, setLoading] = useState(false);\r\n    const stompClientRef = useRef(null);\r\n    const bottomRef = useRef(null);\r\n\r\n    // WebSocket init\r\n    useEffect(() => {\r\n      const socket = new SockJS('http://localhost:8080/ws'); // URL WebSocket'а\r\n      const stompClient = new Client({\r\n        webSocketFactory: () => socket,\r\n        debug: str => console.log(str),\r\n        reconnectDelay: 5000,\r\n      });\r\n\r\n      stompClient.onConnect = () => {\r\n        stompClient.subscribe(`/topic/chat/${props.chatId}`, (msg) => {\r\n          const newMessage = JSON.parse(msg.body);\r\n          setMessages(prev => [...prev, newMessage]);\r\n        });\r\n      };\r\n\r\n      stompClient.activate();\r\n      stompClientRef.current = stompClient;\r\n\r\n      return () => stompClient.deactivate();\r\n    }, [chatId]);\r\n\r\n    // Получить последние 50 сообщений\r\n    useEffect(() => {\r\n      fetch(`http://localhost:8080/api/messages/last/${chatId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setMessages(data.reverse()); // Упорядочим от старых к новым\r\n          scrollToBottom();\r\n        });\r\n    }, [chatId]);\r\n\r\n    // Прокрутка вниз после отправки\r\n    const scrollToBottom = () => {\r\n      bottomRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    const sendMessage = () => {\r\n      if (!messageText.trim()) return;\r\n\r\n      const messageObj = {\r\n        chatId,\r\n        senderId: currentUserId,\r\n        text: messageText,\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n\r\n      stompClientRef.current.publish({\r\n        destination: `/${chatId}/chat.send`,\r\n        body: JSON.stringify(messageObj),\r\n      });\r\n\r\n      setMessageText('');\r\n    };\r\n\r\n    const loadMore = async () => {\r\n      if (messages.length === 0) return;\r\n      setLoading(true);\r\n      const lastTimestamp = messages[0].timestamp;\r\n\r\n      const res = await fetch(`http://localhost:8080/api/messages/load?chatId=${chatId}&before=${lastTimestamp}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      const olderMessages = await res.json();\r\n      setMessages(prev => [...olderMessages.reverse(), ...prev]);\r\n      setLoading(false);\r\n    };\r\n\r\n    return(\r\n        <div> \r\n            <div className=\"userInfo_chat\">\r\n              <div className=\"userName_chat\">{props.username}</div>\r\n            </div>\r\n            {messages.map((msg, index) => (\r\n              <div key={index} className={msg.senderId === currentUserId ? 'my-message' : 'their-message'}>\r\n                {msg.text}\r\n              </div>\r\n            ))}\r\n            <div className=\"push_chat\">\r\n              <input type=\"text\" className=\"input_chat\"/>\r\n              <button className=\"chat_button\">send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}