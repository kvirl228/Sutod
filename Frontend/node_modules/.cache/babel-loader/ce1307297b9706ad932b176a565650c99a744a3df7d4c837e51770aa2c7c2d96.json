{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\markp\\\\Desktop\\\\Sutod\\\\fronted\\\\src\\\\Components\\\\Forms\\\\Group.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Group(props) {\n  _s();\n  const [groupName, setGroupName] = useState('');\n  // const [usersToAdd, setUsersToAdd] = useState([])\n  const [user, setUser] = useState([]);\n  const [userid, setuserId] = useState(-1);\n  const navigate = useNavigate();\n  const handleGroupName = event => {\n    setGroupName(event.target.value);\n  };\n\n  // const handle = (event) => {\n  //     setUsersToAdd(event.target.value)\n  // }\n\n  async function refresh() {\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/refresh\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n        // mode: 'cors'\n      });\n      if (response.ok) {\n        const token = await response.text();\n        localStorage.setItem(\"token\", token);\n      } else {}\n    } catch (error) {}\n  }\n  const getUserId = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/users/id/${localStorage.getItem(\"token\")}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setuserId(data);\n        return data;\n      } else if (response.status === 401) {\n        if (await refresh()) {\n          return await getUserId();\n        }\n      }\n      return null;\n    } catch (error) {\n      console.error('Ошибка:', error);\n      return null;\n    }\n  };\n  async function createGroup(groupName) {\n    try {\n      const response = await fetch(`http://localhost:8080/api/groups/create`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          groupName: groupName,\n          creatorId: localStorage.getItem(\"token\").getItem(\"userId\")\n        })\n      });\n      console.log(groupName, localStorage.getItem(\"token\").getItem(\"userId\"));\n      if (response.ok) {\n        await refresh();\n        alert(\"YRAAAAAAAAA\");\n      } else {\n        alert(\"Eror\");\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n    }\n  }\n  useEffect(() => {\n    const init = async () => {\n      const id = await getUserId();\n    };\n    init();\n  }, []);\n  function toChats() {\n    navigate('/chats');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forms_block_settings\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"forms\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings_exit\",\n        onClick: toChats,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_form_text\",\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0433\\u0440\\u0443\\u043F\\u043F\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form_label\",\n          children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0433\\u0440\\u0443\\u043F\\u043F\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form_input\",\n          value: groupName,\n          onChange: handleGroupName,\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0433\\u0440\\u0443\\u043F\\u043F\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form_btn\",\n          onClick: () => createGroup(),\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(Group, \"xAWOoyg3lxbM3ywpEarvMLTNcpk=\", false, function () {\n  return [useNavigate];\n});\n_c = Group;\nexport default Group;\nvar _c;\n$RefreshReg$(_c, \"Group\");","map":{"version":3,"names":["useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Group","props","_s","groupName","setGroupName","user","setUser","userid","setuserId","navigate","handleGroupName","event","target","value","refresh","response","fetch","method","credentials","headers","ok","token","text","localStorage","setItem","error","getUserId","getItem","data","json","status","console","createGroup","body","JSON","stringify","creatorId","log","alert","init","id","toChats","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/markp/Desktop/Sutod/fronted/src/Components/Forms/Group.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nfunction Group(props){\r\n\r\n    const [groupName, setGroupName] = useState('')\r\n    // const [usersToAdd, setUsersToAdd] = useState([])\r\n    const[user, setUser] = useState([])\r\n    const [userid, setuserId] = useState(-1)\r\n    \r\n\r\n    const navigate = useNavigate()\r\n\r\n    const handleGroupName = (event) => {\r\n        setGroupName(event.target.value)\r\n    }\r\n\r\n    // const handle = (event) => {\r\n    //     setUsersToAdd(event.target.value)\r\n    // }\r\n\r\n    async function refresh(){\r\n        try {\r\n        const response = await fetch(\"http://localhost:8080/auth/refresh\", {\r\n          method: \"POST\",\r\n          credentials: \"include\", \r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          // mode: 'cors'\r\n        });\r\n\r\n        if (response.ok) {\r\n          const token = await response.text()\r\n          localStorage.setItem(\"token\", token)\r\n        } else {\r\n        \r\n        }\r\n      } catch (error) {\r\n      \r\n      }\r\n    }\r\n\r\n    const getUserId = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/api/users/id/${localStorage.getItem(\"token\")}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setuserId(data)\r\n                return data\r\n            } else if (response.status === 401) {\r\n                if (await refresh()) {\r\n                    return await getUserId()\r\n                }\r\n            }\r\n            return null\r\n        } catch (error) {\r\n            console.error('Ошибка:', error);\r\n            return null\r\n        }\r\n    }\r\n\r\n    async function createGroup (groupName) {\r\n        try {\r\n        const response = await fetch(`http://localhost:8080/api/groups/create`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\r\n            },\r\n            body: JSON.stringify({\r\n                groupName: groupName,\r\n                creatorId: localStorage.getItem(\"token\").getItem(\"userId\"),\r\n                \r\n            }),\r\n        }\r\n        );\r\n        console.log(groupName, localStorage.getItem(\"token\").getItem(\"userId\"));\r\n        if(response.ok){\r\n            await refresh()\r\n            alert(\"YRAAAAAAAAA\")\r\n        }\r\n        else{\r\n            alert(\"Eror\")\r\n        }\r\n        } catch (error) {\r\n            console.error('Ошибка:', error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            const id = await getUserId()\r\n        }\r\n        init()\r\n    }, [])\r\n\r\n    function toChats(){\r\n        navigate('/chats')\r\n    }\r\n    return(\r\n        <div className=\"forms_block_settings\">\r\n            <form className=\"forms\">\r\n                <div className=\"settings_exit\" onClick={toChats}>X</div>\r\n                <div className=\"main_form_text\">Создать группу</div>\r\n                <div className=\"form_block\">\r\n                    <label className=\"form_label\">Название группы</label>\r\n                    <input className=\"form_input\" value = {groupName} onChange={handleGroupName} placeholder=\"Введите название группы\"/>\r\n                    <button className=\"form_btn\" onClick={() => createGroup()} >Создать</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Group;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}