{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noket\\\\Desktop\\\\Sutod\\\\fronted\\\\src\\\\Components\\\\Chats\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport SockJS from 'sockjs-client';\nimport { Client } from '@stomp/stompjs';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  userId,\n  user2Id,\n  username\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [chatId, setChatId] = useState(null);\n  const [inputText, setInputText] = useState('');\n  const [hasMore, setHasMore] = useState(true);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const clientRef = useRef(null);\n  const isFirstLoad = useRef(true);\n  const containerRef = useRef(null);\n  const pageRef = useRef(0);\n\n  // Проверка существования чата и подгрузка сообщений\n  const checkChatAndLoadMessages = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      // Проверяем существование чата\n      const chatResponse = await fetch(`http://localhost:8080/api/chat/with/${user2Id}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (chatResponse.ok) {\n        const chatId = await chatResponse.text();\n        if (chatId && chatId !== 'null') {\n          setChatId(chatId);\n\n          // Загружаем последние сообщения\n          const messagesResponse = await fetch(`http://localhost:8080/api/messages/chat/${chatId}/recent`, {\n            headers: {\n              'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n            }\n          });\n          if (messagesResponse.ok) {\n            const messages = await messagesResponse.json();\n            setMessages(messages.reverse()); // Переворачиваем чтобы новые были внизу\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error checking chat:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [user2Id]);\n\n  // Инициализация WebSocket\n  const initWebSocket = useCallback(() => {\n    const socket = new SockJS(\"http://localhost:8080/ws-chat\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000,\n      connectHeaders: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      onConnect: () => {\n        setIsConnected(true);\n        console.log(\"WebSocket connected\");\n\n        // Подписка на личные сообщения\n        client.subscribe(`/user/queue/private`, message => {\n          const msg = JSON.parse(message.body);\n          setMessages(prev => [...prev, msg]);\n        });\n\n        // Подписка на ошибки\n        client.subscribe(`/user/queue/errors`, message => {\n          console.error('Error:', message.body);\n        });\n      },\n      onDisconnect: () => {\n        setIsConnected(false);\n      },\n      onStompError: frame => {\n        console.error('Broker error:', frame.headers['message']);\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n    return () => {\n      client.deactivate();\n    };\n  }, []);\n\n  // Отправка сообщения\n  const sendMessage = useCallback(async () => {\n    if (!inputText.trim() || !isConnected) return;\n    try {\n      // Отправляем через WebSocket\n      clientRef.current.publish({\n        destination: `/app/chat.send.${user2Id}`,\n        body: JSON.stringify({\n          content: inputText\n        }),\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setInputText('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  }, [inputText, isConnected, user2Id]);\n\n  // Подгрузка старых сообщений\n  const loadMoreMessages = useCallback(async () => {\n    if (!chatId || isLoading || !hasMore || messages.length === 0) return;\n    setIsLoading(true);\n    try {\n      const response = await fetch(`http://localhost:8080/api/messages/chat/${chatId}/page?page=${pageRef.current}&size=50`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (response.ok) {\n        const newMessages = await response.json();\n        if (newMessages.length > 0) {\n          setMessages(prev => [...newMessages.reverse(), ...prev]);\n          pageRef.current += 1;\n        } else {\n          setHasMore(false);\n        }\n      }\n    } catch (error) {\n      console.error('Error loading more messages:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [chatId, isLoading, hasMore, messages.length]);\n\n  // Обработчик скролла\n  const handleScroll = useCallback(() => {\n    if (containerRef.current.scrollTop === 0 && !isLoading && hasMore) {\n      loadMoreMessages();\n    }\n  }, [isLoading, hasMore, loadMoreMessages]);\n\n  // Основной эффект инициализации\n  useEffect(() => {\n    checkChatAndLoadMessages();\n    initWebSocket();\n    return () => {\n      if (clientRef.current) {\n        clientRef.current.deactivate();\n      }\n    };\n  }, [checkChatAndLoadMessages, initWebSocket]);\n\n  // Автоскролл при новых сообщениях\n  useEffect(() => {\n    if (containerRef.current && !isFirstLoad.current && messages.length > 0) {\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }\n    isFirstLoad.current = false;\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userInfo_chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userName_chat\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\",\n        children: isConnected ? 'Online' : 'Connecting...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      onScroll: handleScroll,\n      ref: containerRef,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.senderId === userId ? 'my-message' : 'their-message',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: new Date(msg.timestamp).toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, `${msg.id}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && sendMessage(),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n        className: \"input_chat\",\n        disabled: !isConnected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat_button\",\n        onClick: sendMessage,\n        disabled: !inputText.trim() || !isConnected,\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"rgS0vtCXgeMBjjTOvnNuhpNJT28=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useState","useRef","useCallback","SockJS","Client","jsxDEV","_jsxDEV","Chat","userId","user2Id","username","_s","messages","setMessages","chatId","setChatId","inputText","setInputText","hasMore","setHasMore","isConnected","setIsConnected","isLoading","setIsLoading","clientRef","isFirstLoad","containerRef","pageRef","checkChatAndLoadMessages","chatResponse","fetch","headers","localStorage","getItem","ok","text","messagesResponse","json","reverse","error","console","initWebSocket","socket","client","webSocketFactory","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","connectHeaders","Authorization","onConnect","log","subscribe","message","msg","JSON","parse","body","prev","onDisconnect","onStompError","frame","activate","current","deactivate","sendMessage","trim","publish","destination","stringify","content","loadMoreMessages","length","response","newMessages","handleScroll","scrollTop","scrollHeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onScroll","ref","map","index","senderId","Date","timestamp","toLocaleTimeString","hour","minute","id","value","onChange","e","target","onKeyPress","key","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/noket/Desktop/Sutod/fronted/src/Components/Chats/Chat.jsx"],"sourcesContent":["import { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport SockJS from 'sockjs-client';\r\nimport { Client } from '@stomp/stompjs';\r\nimport './Chat.css';\r\n\r\nfunction Chat({ userId, user2Id, username }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatId, setChatId] = useState(null);\r\n  const [inputText, setInputText] = useState('');\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const clientRef = useRef(null);\r\n  const isFirstLoad = useRef(true);\r\n  const containerRef = useRef(null);\r\n  const pageRef = useRef(0);\r\n\r\n  // Проверка существования чата и подгрузка сообщений\r\n  const checkChatAndLoadMessages = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Проверяем существование чата\r\n      const chatResponse = await fetch(`http://localhost:8080/api/chat/with/${user2Id}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n\r\n      if (chatResponse.ok) {\r\n        const chatId = await chatResponse.text();\r\n        if (chatId && chatId !== 'null') {\r\n          setChatId(chatId);\r\n          \r\n          // Загружаем последние сообщения\r\n          const messagesResponse = await fetch(`http://localhost:8080/api/messages/chat/${chatId}/recent`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n            }\r\n          });\r\n\r\n          if (messagesResponse.ok) {\r\n            const messages = await messagesResponse.json();\r\n            setMessages(messages.reverse()); // Переворачиваем чтобы новые были внизу\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking chat:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [user2Id]);\r\n\r\n  // Инициализация WebSocket\r\n  const initWebSocket = useCallback(() => {\r\n    const socket = new SockJS(\"http://localhost:8080/ws-chat\");\r\n    const client = new Client({\r\n      webSocketFactory: () => socket,\r\n      reconnectDelay: 5000,\r\n      heartbeatIncoming: 4000,\r\n      heartbeatOutgoing: 4000,\r\n      connectHeaders: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n      },\r\n      onConnect: () => {\r\n        setIsConnected(true);\r\n        console.log(\"WebSocket connected\");\r\n\r\n        // Подписка на личные сообщения\r\n        client.subscribe(`/user/queue/private`, (message) => {\r\n          const msg = JSON.parse(message.body);\r\n          setMessages(prev => [...prev, msg]);\r\n        });\r\n\r\n        // Подписка на ошибки\r\n        client.subscribe(`/user/queue/errors`, (message) => {\r\n          console.error('Error:', message.body);\r\n        });\r\n      },\r\n      onDisconnect: () => {\r\n        setIsConnected(false);\r\n      },\r\n      onStompError: (frame) => {\r\n        console.error('Broker error:', frame.headers['message']);\r\n      }\r\n    });\r\n\r\n    client.activate();\r\n    clientRef.current = client;\r\n\r\n    return () => {\r\n      client.deactivate();\r\n    };\r\n  }, []);\r\n\r\n  // Отправка сообщения\r\n  const sendMessage = useCallback(async () => {\r\n    if (!inputText.trim() || !isConnected) return;\r\n\r\n    try {\r\n      // Отправляем через WebSocket\r\n      clientRef.current.publish({\r\n        destination: `/app/chat.send.${user2Id}`,\r\n        body: JSON.stringify({\r\n          content: inputText\r\n        }),\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n        }\r\n      });\r\n\r\n      setInputText('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  }, [inputText, isConnected, user2Id]);\r\n\r\n  // Подгрузка старых сообщений\r\n  const loadMoreMessages = useCallback(async () => {\r\n    if (!chatId || isLoading || !hasMore || messages.length === 0) return;\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8080/api/messages/chat/${chatId}/page?page=${pageRef.current}&size=50`, \r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n          }\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const newMessages = await response.json();\r\n        if (newMessages.length > 0) {\r\n          setMessages(prev => [...newMessages.reverse(), ...prev]);\r\n          pageRef.current += 1;\r\n        } else {\r\n          setHasMore(false);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading more messages:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [chatId, isLoading, hasMore, messages.length]);\r\n\r\n  // Обработчик скролла\r\n  const handleScroll = useCallback(() => {\r\n    if (containerRef.current.scrollTop === 0 && !isLoading && hasMore) {\r\n      loadMoreMessages();\r\n    }\r\n  }, [isLoading, hasMore, loadMoreMessages]);\r\n\r\n  // Основной эффект инициализации\r\n  useEffect(() => {\r\n    checkChatAndLoadMessages();\r\n    initWebSocket();\r\n\r\n    return () => {\r\n      if (clientRef.current) {\r\n        clientRef.current.deactivate();\r\n      }\r\n    };\r\n  }, [checkChatAndLoadMessages, initWebSocket]);\r\n\r\n  // Автоскролл при новых сообщениях\r\n  useEffect(() => {\r\n    if (containerRef.current && !isFirstLoad.current && messages.length > 0) {\r\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n    }\r\n    isFirstLoad.current = false;\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"userInfo_chat\">\r\n        <div className=\"userName_chat\">{username}</div>\r\n        <div className=\"connection-status\">\r\n          {isConnected ? 'Online' : 'Connecting...'}\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"messages-container\"\r\n        onScroll={handleScroll}\r\n        ref={containerRef}\r\n      >\r\n        {isLoading && <div className=\"loading-indicator\">Loading...</div>}\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={`${msg.id}-${index}`}\r\n            className={msg.senderId === userId ? 'my-message' : 'their-message'}\r\n          >\r\n            <div className=\"message-content\">{msg.content}</div>\r\n            <div className=\"message-time\">\r\n              {new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"message-input-container\">\r\n        <input\r\n          value={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n          onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n          placeholder=\"Введите сообщение\"\r\n          className=\"input_chat\"\r\n          disabled={!isConnected}\r\n        />\r\n        <button \r\n          className=\"chat_button\" \r\n          onClick={sendMessage}\r\n          disabled={!inputText.trim() || !isConnected}\r\n        >\r\n          Отправить\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAChE,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,IAAIA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMwB,SAAS,GAAGvB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMwB,WAAW,GAAGxB,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMyB,YAAY,GAAGzB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM0B,OAAO,GAAG1B,MAAM,CAAC,CAAC,CAAC;;EAEzB;EACA,MAAM2B,wBAAwB,GAAG1B,WAAW,CAAC,YAAY;IACvDqB,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF;MACA,MAAMM,YAAY,GAAG,MAAMC,KAAK,CAAC,uCAAuCrB,OAAO,EAAE,EAAE;QACjFsB,OAAO,EAAE;UACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC1D;MACF,CAAC,CAAC;MAEF,IAAIJ,YAAY,CAACK,EAAE,EAAE;QACnB,MAAMpB,MAAM,GAAG,MAAMe,YAAY,CAACM,IAAI,CAAC,CAAC;QACxC,IAAIrB,MAAM,IAAIA,MAAM,KAAK,MAAM,EAAE;UAC/BC,SAAS,CAACD,MAAM,CAAC;;UAEjB;UACA,MAAMsB,gBAAgB,GAAG,MAAMN,KAAK,CAAC,2CAA2ChB,MAAM,SAAS,EAAE;YAC/FiB,OAAO,EAAE;cACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;YAC1D;UACF,CAAC,CAAC;UAEF,IAAIG,gBAAgB,CAACF,EAAE,EAAE;YACvB,MAAMtB,QAAQ,GAAG,MAAMwB,gBAAgB,CAACC,IAAI,CAAC,CAAC;YAC9CxB,WAAW,CAACD,QAAQ,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;UACnC;QACF;MACF;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRhB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACd,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMgC,aAAa,GAAGvC,WAAW,CAAC,MAAM;IACtC,MAAMwC,MAAM,GAAG,IAAIvC,MAAM,CAAC,+BAA+B,CAAC;IAC1D,MAAMwC,MAAM,GAAG,IAAIvC,MAAM,CAAC;MACxBwC,gBAAgB,EAAEA,CAAA,KAAMF,MAAM;MAC9BG,cAAc,EAAE,IAAI;MACpBC,iBAAiB,EAAE,IAAI;MACvBC,iBAAiB,EAAE,IAAI;MACvBC,cAAc,EAAE;QACdC,aAAa,EAAE,UAAUjB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACxD,CAAC;MACDiB,SAAS,EAAEA,CAAA,KAAM;QACf7B,cAAc,CAAC,IAAI,CAAC;QACpBmB,OAAO,CAACW,GAAG,CAAC,qBAAqB,CAAC;;QAElC;QACAR,MAAM,CAACS,SAAS,CAAC,qBAAqB,EAAGC,OAAO,IAAK;UACnD,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;UACpC5C,WAAW,CAAC6C,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEJ,GAAG,CAAC,CAAC;QACrC,CAAC,CAAC;;QAEF;QACAX,MAAM,CAACS,SAAS,CAAC,oBAAoB,EAAGC,OAAO,IAAK;UAClDb,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEc,OAAO,CAACI,IAAI,CAAC;QACvC,CAAC,CAAC;MACJ,CAAC;MACDE,YAAY,EAAEA,CAAA,KAAM;QAClBtC,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;MACDuC,YAAY,EAAGC,KAAK,IAAK;QACvBrB,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEsB,KAAK,CAAC9B,OAAO,CAAC,SAAS,CAAC,CAAC;MAC1D;IACF,CAAC,CAAC;IAEFY,MAAM,CAACmB,QAAQ,CAAC,CAAC;IACjBtC,SAAS,CAACuC,OAAO,GAAGpB,MAAM;IAE1B,OAAO,MAAM;MACXA,MAAM,CAACqB,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,WAAW,GAAG/D,WAAW,CAAC,YAAY;IAC1C,IAAI,CAACc,SAAS,CAACkD,IAAI,CAAC,CAAC,IAAI,CAAC9C,WAAW,EAAE;IAEvC,IAAI;MACF;MACAI,SAAS,CAACuC,OAAO,CAACI,OAAO,CAAC;QACxBC,WAAW,EAAE,kBAAkB3D,OAAO,EAAE;QACxCgD,IAAI,EAAEF,IAAI,CAACc,SAAS,CAAC;UACnBC,OAAO,EAAEtD;QACX,CAAC,CAAC;QACFe,OAAO,EAAE;UACPkB,aAAa,EAAE,UAAUjB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,CAAC;MAEFhB,YAAY,CAAC,EAAE,CAAC;IAClB,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC,EAAE,CAACvB,SAAS,EAAEI,WAAW,EAAEX,OAAO,CAAC,CAAC;;EAErC;EACA,MAAM8D,gBAAgB,GAAGrE,WAAW,CAAC,YAAY;IAC/C,IAAI,CAACY,MAAM,IAAIQ,SAAS,IAAI,CAACJ,OAAO,IAAIN,QAAQ,CAAC4D,MAAM,KAAK,CAAC,EAAE;IAE/DjD,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMkD,QAAQ,GAAG,MAAM3C,KAAK,CAC1B,2CAA2ChB,MAAM,cAAca,OAAO,CAACoC,OAAO,UAAU,EACxF;QACEhC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC1D;MACF,CACF,CAAC;MAED,IAAIwC,QAAQ,CAACvC,EAAE,EAAE;QACf,MAAMwC,WAAW,GAAG,MAAMD,QAAQ,CAACpC,IAAI,CAAC,CAAC;QACzC,IAAIqC,WAAW,CAACF,MAAM,GAAG,CAAC,EAAE;UAC1B3D,WAAW,CAAC6C,IAAI,IAAI,CAAC,GAAGgB,WAAW,CAACpC,OAAO,CAAC,CAAC,EAAE,GAAGoB,IAAI,CAAC,CAAC;UACxD/B,OAAO,CAACoC,OAAO,IAAI,CAAC;QACtB,CAAC,MAAM;UACL5C,UAAU,CAAC,KAAK,CAAC;QACnB;MACF;IACF,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,SAAS;MACRhB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACT,MAAM,EAAEQ,SAAS,EAAEJ,OAAO,EAAEN,QAAQ,CAAC4D,MAAM,CAAC,CAAC;;EAEjD;EACA,MAAMG,YAAY,GAAGzE,WAAW,CAAC,MAAM;IACrC,IAAIwB,YAAY,CAACqC,OAAO,CAACa,SAAS,KAAK,CAAC,IAAI,CAACtD,SAAS,IAAIJ,OAAO,EAAE;MACjEqD,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACjD,SAAS,EAAEJ,OAAO,EAAEqD,gBAAgB,CAAC,CAAC;;EAE1C;EACAxE,SAAS,CAAC,MAAM;IACd6B,wBAAwB,CAAC,CAAC;IAC1Ba,aAAa,CAAC,CAAC;IAEf,OAAO,MAAM;MACX,IAAIjB,SAAS,CAACuC,OAAO,EAAE;QACrBvC,SAAS,CAACuC,OAAO,CAACC,UAAU,CAAC,CAAC;MAChC;IACF,CAAC;EACH,CAAC,EAAE,CAACpC,wBAAwB,EAAEa,aAAa,CAAC,CAAC;;EAE7C;EACA1C,SAAS,CAAC,MAAM;IACd,IAAI2B,YAAY,CAACqC,OAAO,IAAI,CAACtC,WAAW,CAACsC,OAAO,IAAInD,QAAQ,CAAC4D,MAAM,GAAG,CAAC,EAAE;MACvE9C,YAAY,CAACqC,OAAO,CAACa,SAAS,GAAGlD,YAAY,CAACqC,OAAO,CAACc,YAAY;IACpE;IACApD,WAAW,CAACsC,OAAO,GAAG,KAAK;EAC7B,CAAC,EAAE,CAACnD,QAAQ,CAAC,CAAC;EAEd,oBACEN,OAAA;IAAKwE,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BzE,OAAA;MAAKwE,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BzE,OAAA;QAAKwE,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAErE;MAAQ;QAAAsE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC/C7E,OAAA;QAAKwE,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/B3D,WAAW,GAAG,QAAQ,GAAG;MAAe;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN7E,OAAA;MACEwE,SAAS,EAAC,oBAAoB;MAC9BM,QAAQ,EAAET,YAAa;MACvBU,GAAG,EAAE3D,YAAa;MAAAqD,QAAA,GAEjBzD,SAAS,iBAAIhB,OAAA;QAAKwE,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAChEvE,QAAQ,CAAC0E,GAAG,CAAC,CAAChC,GAAG,EAAEiC,KAAK,kBACvBjF,OAAA;QAEEwE,SAAS,EAAExB,GAAG,CAACkC,QAAQ,KAAKhF,MAAM,GAAG,YAAY,GAAG,eAAgB;QAAAuE,QAAA,gBAEpEzE,OAAA;UAAKwE,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAEzB,GAAG,CAACgB;QAAO;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpD7E,OAAA;UAAKwE,SAAS,EAAC,cAAc;UAAAC,QAAA,EAC1B,IAAIU,IAAI,CAACnC,GAAG,CAACoC,SAAS,CAAC,CAACC,kBAAkB,CAAC,EAAE,EAAE;YAAEC,IAAI,EAAE,SAAS;YAAEC,MAAM,EAAE;UAAU,CAAC;QAAC;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpF,CAAC;MAAA,GAND,GAAG7B,GAAG,CAACwC,EAAE,IAAIP,KAAK,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOtB,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN7E,OAAA;MAAKwE,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACtCzE,OAAA;QACEyF,KAAK,EAAE/E,SAAU;QACjBgF,QAAQ,EAAGC,CAAC,IAAKhF,YAAY,CAACgF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CI,UAAU,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAInC,WAAW,CAAC,CAAE;QACtDoC,WAAW,EAAC,mGAAmB;QAC/BvB,SAAS,EAAC,YAAY;QACtBwB,QAAQ,EAAE,CAAClF;MAAY;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF7E,OAAA;QACEwE,SAAS,EAAC,aAAa;QACvByB,OAAO,EAAEtC,WAAY;QACrBqC,QAAQ,EAAE,CAACtF,SAAS,CAACkD,IAAI,CAAC,CAAC,IAAI,CAAC9C,WAAY;QAAA2D,QAAA,EAC7C;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxE,EAAA,CA1NQJ,IAAI;AAAAiG,EAAA,GAAJjG,IAAI;AA4Nb,eAAeA,IAAI;AAAC,IAAAiG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}