{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noket\\\\Desktop\\\\Sutod\\\\fronted\\\\src\\\\Components\\\\Chats\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  userId,\n  user2Id,\n  username\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isClick, setIsClick] = useState(true);\n  const [deleteId, setDeleteId] = useState(0);\n  const refreshToken = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/refresh\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const token = await response.text();\n        localStorage.setItem(\"token\", token);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  };\n  const subscribe = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/messages/twoId?id1=${userId}&id2=${user2Id}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setMessages([]);\n        setMessages(prevMessages => [...prevMessages, ...data]);\n        setTimeout(() => {\n          subscribe();\n        }, 1500);\n      } else if (response.status === 401) {\n        if (await refreshToken()) {\n          return await subscribe();\n        }\n      } else {\n        console.log(\"dsfads\");\n      }\n    } catch (error) {\n      setTimeout(() => {\n        subscribe();\n      }, 1);\n    }\n  };\n  const sendMessage = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/messages/send/${user2Id}`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: inputText,\n          senderId: userId\n        })\n      });\n      if (response.ok) {\n        const message = await response.json();\n        const newMessage = [...messages, message];\n        setMessages(newMessage);\n      } else {\n        alert(\"Eror\");\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n    }\n  };\n  const deleteMessage = async id => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/messages/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        alert(\"Nice\");\n        subscribe();\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  };\n  const click = (clicker, id) => {\n    setIsClick(clicker);\n    setDeleteId(id);\n  };\n  useEffect(() => {\n    subscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userInfo_chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userName_chat\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.senderId === userId ? 'my_message' : 'their_message',\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          onClick: () => click(!isClick, msg.id),\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, `${msg.timestamp}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), isClick ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"push_chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n        className: \"input_chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat_button\",\n        onClick: sendMessage,\n        disabled: !inputText.trim(),\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteMessage(deleteId),\n        children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"Wp3aHxk8opKgA756fFyinkt9aD0=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Chat","userId","user2Id","username","_s","messages","setMessages","inputText","setInputText","isClick","setIsClick","deleteId","setDeleteId","refreshToken","response","fetch","method","credentials","headers","ok","token","text","localStorage","setItem","error","subscribe","getItem","data","json","prevMessages","setTimeout","status","console","log","sendMessage","body","JSON","stringify","message","senderId","newMessage","alert","deleteMessage","id","click","clicker","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onClick","timestamp","value","onChange","e","target","placeholder","disabled","trim","_c","$RefreshReg$"],"sources":["C:/Users/noket/Desktop/Sutod/fronted/src/Components/Chats/Chat.jsx"],"sourcesContent":["import { useEffect, useState} from \"react\";\r\nimport './Chat.css';\r\n\r\nfunction Chat({ userId, user2Id, username }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isClick, setIsClick] = useState(true)\r\n  const [deleteId, setDeleteId] = useState(0)\r\n\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/auth/refresh\", {\r\n                  method: \"POST\",\r\n                  credentials: \"include\",\r\n                  headers: { \"Content-Type\": \"application/json\" }\r\n              });\r\n\r\n              if (response.ok) {\r\n                  const token = await response.text()\r\n                  localStorage.setItem(\"token\", token)\r\n                  return true\r\n              }\r\n              \r\n              return false\r\n          } catch (error) {\r\n              \r\n              return false\r\n          }\r\n  }\r\n  \r\n  const subscribe = async () => {\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:8080/api/messages/twoId?id1=${userId}&id2=${user2Id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        });\r\n            \r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            setMessages([])\r\n            setMessages(prevMessages => [...prevMessages, ...data]);\r\n            setTimeout(() => {\r\n              subscribe()\r\n            }, 1500)\r\n            \r\n        } \r\n        else if (response.status === 401) {\r\n            if (await refreshToken()) {\r\n              return await subscribe()\r\n            }\r\n        }\r\n        else{\r\n          console.log(\"dsfads\")\r\n        }\r\n      } \r\n      catch (error) {\r\n        setTimeout(() => {\r\n          subscribe()\r\n        }, 1)\r\n      }\r\n  }\r\n\r\n  const sendMessage = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/api/messages/send/${user2Id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          message: inputText,\r\n          senderId: userId,\r\n        })\r\n      });\r\n\r\n      \r\n      if(response.ok){\r\n            const message = await response.json()\r\n            const newMessage = [...messages, message]\r\n            setMessages(newMessage)\r\n        }\r\n        else{\r\n            alert(\"Eror\")\r\n        }\r\n    } catch (error) {\r\n      console.error('Ошибка:', error);\r\n    }\r\n  }\r\n\r\n  const deleteMessage = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/api/messages/${id}`, {\r\n                  method: \"DELETE\",\r\n                  headers: { \r\n                    'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\r\n                    \"Content-Type\": \"application/json\" \r\n                  }\r\n              });\r\n\r\n              if (response.ok) {\r\n                  alert(\"Nice\")\r\n                  subscribe()\r\n              }\r\n              \r\n              return false\r\n          } catch (error) {\r\n              \r\n              return false\r\n          }\r\n  }\r\n\r\n  const click = (clicker, id) => {\r\n    setIsClick(clicker)\r\n    setDeleteId(id)\r\n  }\r\n\r\n  useEffect(() => {\r\n    subscribe()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"userInfo_chat\">\r\n        <div className=\"userName_chat\">{username}</div>\r\n        <div className=\"connection-status\">\r\n          \r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"messages-container\">\r\n        {messages.map((msg, index) => (\r\n          <div key={`${msg.timestamp}-${index}`} className={msg.senderId === userId ? 'my_message' : 'their_message'}>\r\n            <div className=\"message-content\" onClick={() => click(!isClick, msg.id)}>{msg.message}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {isClick ?\r\n        <div className=\"push_chat\">\r\n          <input value={inputText} onChange={(e) => setInputText(e.target.value)} placeholder=\"Введите сообщение\" className=\"input_chat\"/>\r\n          <button className=\"chat_button\" onClick={sendMessage} disabled={!inputText.trim()}>Отправить</button>\r\n        </div>\r\n        :\r\n        <div>\r\n          <button onClick={() => deleteMessage(deleteId)}>удалить</button>\r\n        </div>\r\n      }\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}